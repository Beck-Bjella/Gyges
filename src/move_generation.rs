use std::cmp::Ordering;

use crate::board::*;
use crate::bitboard::*;
use crate::evaluation::get_evalulation;

pub const ONE_PIECE: usize = 1;
pub const TWO_PIECE: usize = 2;
pub const THREE_PIECE: usize = 3;

pub const PLAYER_1_GOAL: usize = 36;
pub const PLAYER_2_GOAL: usize = 37;

pub const NULL: usize = 100;
const NULL_BB: BitBoard = BitBoard(u64::MAX);

pub const THREE_PATHS: [[[usize; 4]; 40]; 36] = [
    [[0, 6, 12, 18], [0, 1, 2, 3], [0, 6, 12, 13], [0, 6, 7, 13], [0, 1, 7, 13], [0, 6, 7, 8], [0, 1, 7, 8], [0, 1, 2, 8], [0, 1, 2, 36], [0, 1, 7, 6], [0, 6, 7, 1], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[1, 7, 13, 19], [1, 2, 3, 4], [1, 0, 6, 12], [1, 7, 6, 12], [1, 7, 13, 12], [1, 7, 13, 14], [1, 7, 8, 14], [1, 2, 8, 14], [1, 7, 8, 9], [1, 2, 8, 9], [1, 2, 3, 9], [1, 2, 3, 36], [1, 7, 6, 0], [1, 0, 6, 7], [1, 2, 8, 7], [1, 7, 8, 2], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[2, 8, 14, 20], [2, 3, 4, 5], [2, 1, 0, 6], [2, 1, 7, 6], [2, 8, 7, 6], [2, 1, 7, 13], [2, 8, 7, 13], [2, 8, 14, 13], [2, 8, 14, 15], [2, 8, 9, 15], [2, 3, 9, 15], [2, 8, 9, 10], [2, 3, 9, 10], [2, 3, 4, 10], [2, 3, 4, 36], [2, 1, 0, 36], [2, 8, 7, 1], [2, 1, 7, 8], [2, 3, 9, 8], [2, 8, 9, 3], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[3, 2, 1, 0], [3, 9, 15, 21], [3, 2, 1, 7], [3, 2, 8, 7], [3, 9, 8, 7], [3, 2, 8, 14], [3, 9, 8, 14], [3, 9, 15, 14], [3, 9, 15, 16], [3, 9, 10, 16], [3, 4, 10, 16], [3, 9, 10, 11], [3, 4, 10, 11], [3, 4, 5, 11], [3, 4, 5, 36], [3, 2, 1, 36], [3, 9, 8, 2], [3, 2, 8, 9], [3, 4, 10, 9], [3, 9, 10, 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[4, 3, 2, 1], [4, 10, 16, 22], [4, 3, 2, 8], [4, 3, 9, 8], [4, 10, 9, 8], [4, 3, 9, 15], [4, 10, 9, 15], [4, 10, 16, 15], [4, 10, 16, 17], [4, 10, 11, 17], [4, 5, 11, 17], [4, 3, 2, 36], [4, 10, 9, 3], [4, 3, 9, 10], [4, 5, 11, 10], [4, 10, 11, 5], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[5, 4, 3, 2], [5, 11, 17, 23], [5, 4, 3, 9], [5, 4, 10, 9], [5, 11, 10, 9], [5, 4, 10, 16], [5, 11, 10, 16], [5, 11, 17, 16], [5, 4, 3, 36], [5, 11, 10, 4], [5, 4, 10, 11], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[6, 12, 18, 24], [6, 7, 8, 9], [6, 12, 18, 19], [6, 12, 13, 19], [6, 7, 13, 19], [6, 12, 13, 14], [6, 7, 13, 14], [6, 7, 8, 14], [6, 7, 8, 2], [6, 7, 1, 2], [6, 0, 1, 2], [6, 7, 1, 36], [6, 0, 1, 36], [6, 7, 13, 12], [6, 12, 13, 7], [6, 0, 1, 7], [6, 7, 1, 0], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[7, 13, 19, 25], [7, 8, 9, 10], [7, 6, 12, 18], [7, 13, 12, 18], [7, 13, 19, 18], [7, 13, 19, 20], [7, 13, 14, 20], [7, 8, 14, 20], [7, 13, 14, 15], [7, 8, 14, 15], [7, 8, 9, 15], [7, 8, 9, 3], [7, 8, 2, 3], [7, 1, 2, 3], [7, 8, 2, 36], [7, 1, 2, 36], [7, 1, 0, 36], [7, 6, 0, 36], [7, 1, 0, 6], [7, 13, 12, 6], [7, 6, 12, 13], [7, 8, 14, 13], [7, 13, 14, 8], [7, 1, 2, 8], [7, 8, 2, 1], [7, 6, 0, 1], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[8, 14, 20, 26], [8, 9, 10, 11], [8, 7, 6, 12], [8, 7, 13, 12], [8, 14, 13, 12], [8, 7, 13, 19], [8, 14, 13, 19], [8, 14, 20, 19], [8, 14, 20, 21], [8, 14, 15, 21], [8, 9, 15, 21], [8, 14, 15, 16], [8, 9, 15, 16], [8, 9, 10, 16], [8, 9, 10, 4], [8, 9, 3, 4], [8, 2, 3, 4], [8, 9, 3, 36], [8, 2, 3, 36], [8, 2, 1, 36], [8, 7, 1, 36], [8, 2, 1, 0], [8, 7, 1, 0], [8, 7, 6, 0], [8, 2, 1, 7], [8, 14, 13, 7], [8, 7, 13, 14], [8, 9, 15, 14], [8, 14, 15, 9], [8, 2, 3, 9], [8, 9, 3, 2], [8, 7, 1, 2], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[9, 8, 7, 6], [9, 15, 21, 27], [9, 8, 7, 13], [9, 8, 14, 13], [9, 15, 14, 13], [9, 8, 14, 20], [9, 15, 14, 20], [9, 15, 21, 20], [9, 15, 21, 22], [9, 15, 16, 22], [9, 10, 16, 22], [9, 15, 16, 17], [9, 10, 16, 17], [9, 10, 11, 17], [9, 10, 11, 5], [9, 10, 4, 5], [9, 3, 4, 5], [9, 10, 4, 36], [9, 3, 4, 36], [9, 3, 2, 36], [9, 8, 2, 36], [9, 3, 2, 1], [9, 8, 2, 1], [9, 8, 7, 1], [9, 3, 2, 8], [9, 15, 14, 8], [9, 8, 14, 15], [9, 10, 16, 15], [9, 15, 16, 10], [9, 3, 4, 10], [9, 10, 4, 3], [9, 8, 2, 3], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[10, 9, 8, 7], [10, 16, 22, 28], [10, 9, 8, 14], [10, 9, 15, 14], [10, 16, 15, 14], [10, 9, 15, 21], [10, 16, 15, 21], [10, 16, 22, 21], [10, 16, 22, 23], [10, 16, 17, 23], [10, 11, 17, 23], [10, 11, 5, 36], [10, 4, 5, 36], [10, 4, 3, 36], [10, 9, 3, 36], [10, 4, 3, 2], [10, 9, 3, 2], [10, 9, 8, 2], [10, 4, 3, 9], [10, 16, 15, 9], [10, 9, 15, 16], [10, 11, 17, 16], [10, 16, 17, 11], [10, 4, 5, 11], [10, 11, 5, 4], [10, 9, 3, 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[11, 10, 9, 8], [11, 17, 23, 29], [11, 10, 9, 15], [11, 10, 16, 15], [11, 17, 16, 15], [11, 10, 16, 22], [11, 17, 16, 22], [11, 17, 23, 22], [11, 5, 4, 36], [11, 10, 4, 36], [11, 5, 4, 3], [11, 10, 4, 3], [11, 10, 9, 3], [11, 5, 4, 10], [11, 17, 16, 10], [11, 10, 16, 17], [11, 10, 4, 5], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[12, 18, 24, 30], [12, 13, 14, 15], [12, 6, 0, 36], [12, 18, 24, 25], [12, 18, 19, 25], [12, 13, 19, 25], [12, 18, 19, 20], [12, 13, 19, 20], [12, 13, 14, 20], [12, 13, 14, 8], [12, 13, 7, 8], [12, 6, 7, 8], [12, 13, 7, 1], [12, 6, 7, 1], [12, 6, 0, 1], [12, 13, 19, 18], [12, 18, 19, 13], [12, 6, 7, 13], [12, 13, 7, 6], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[13, 19, 25, 31], [13, 14, 15, 16], [13, 7, 1, 36], [13, 12, 18, 24], [13, 19, 18, 24], [13, 19, 25, 24], [13, 19, 25, 26], [13, 19, 20, 26], [13, 14, 20, 26], [13, 19, 20, 21], [13, 14, 20, 21], [13, 14, 15, 21], [13, 14, 15, 9], [13, 14, 8, 9], [13, 7, 8, 9], [13, 14, 8, 2], [13, 7, 8, 2], [13, 7, 1, 2], [13, 7, 1, 0], [13, 7, 6, 0], [13, 12, 6, 0], [13, 7, 6, 12], [13, 19, 18, 12], [13, 12, 18, 19], [13, 14, 20, 19], [13, 19, 20, 14], [13, 7, 8, 14], [13, 14, 8, 7], [13, 12, 6, 7], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[14, 20, 26, 32], [14, 15, 16, 17], [14, 8, 2, 36], [14, 13, 12, 18], [14, 13, 19, 18], [14, 20, 19, 18], [14, 13, 19, 25], [14, 20, 19, 25], [14, 20, 26, 25], [14, 20, 26, 27], [14, 20, 21, 27], [14, 15, 21, 27], [14, 20, 21, 22], [14, 15, 21, 22], [14, 15, 16, 22], [14, 15, 16, 10], [14, 15, 9, 10], [14, 8, 9, 10], [14, 15, 9, 3], [14, 8, 9, 3], [14, 8, 2, 3], [14, 8, 2, 1], [14, 8, 7, 1], [14, 13, 7, 1], [14, 8, 7, 6], [14, 13, 7, 6], [14, 13, 12, 6], [14, 8, 7, 13], [14, 20, 19, 13], [14, 13, 19, 20], [14, 15, 21, 20], [14, 20, 21, 15], [14, 8, 9, 15], [14, 15, 9, 8], [14, 13, 7, 8], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[15, 14, 13, 12], [15, 21, 27, 33], [15, 9, 3, 36], [15, 14, 13, 19], [15, 14, 20, 19], [15, 21, 20, 19], [15, 14, 20, 26], [15, 21, 20, 26], [15, 21, 27, 26], [15, 21, 27, 28], [15, 21, 22, 28], [15, 16, 22, 28], [15, 21, 22, 23], [15, 16, 22, 23], [15, 16, 17, 23], [15, 16, 17, 11], [15, 16, 10, 11], [15, 9, 10, 11], [15, 16, 10, 4], [15, 9, 10, 4], [15, 9, 3, 4], [15, 9, 3, 2], [15, 9, 8, 2], [15, 14, 8, 2], [15, 9, 8, 7], [15, 14, 8, 7], [15, 14, 13, 7], [15, 9, 8, 14], [15, 21, 20, 14], [15, 14, 20, 21], [15, 16, 22, 21], [15, 21, 22, 16], [15, 9, 10, 16], [15, 16, 10, 9], [15, 14, 8, 9], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[16, 15, 14, 13], [16, 22, 28, 34], [16, 10, 4, 36], [16, 15, 14, 20], [16, 15, 21, 20], [16, 22, 21, 20], [16, 15, 21, 27], [16, 22, 21, 27], [16, 22, 28, 27], [16, 22, 28, 29], [16, 22, 23, 29], [16, 17, 23, 29], [16, 17, 11, 5], [16, 10, 11, 5], [16, 10, 4, 5], [16, 10, 4, 3], [16, 10, 9, 3], [16, 15, 9, 3], [16, 10, 9, 8], [16, 15, 9, 8], [16, 15, 14, 8], [16, 10, 9, 15], [16, 22, 21, 15], [16, 15, 21, 22], [16, 17, 23, 22], [16, 22, 23, 17], [16, 10, 11, 17], [16, 17, 11, 10], [16, 15, 9, 10], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[17, 16, 15, 14], [17, 23, 29, 35], [17, 11, 5, 36], [17, 16, 15, 21], [17, 16, 22, 21], [17, 23, 22, 21], [17, 16, 22, 28], [17, 23, 22, 28], [17, 23, 29, 28], [17, 11, 5, 4], [17, 11, 10, 4], [17, 16, 10, 4], [17, 11, 10, 9], [17, 16, 10, 9], [17, 16, 15, 9], [17, 11, 10, 16], [17, 23, 22, 16], [17, 16, 22, 23], [17, 16, 10, 11], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[18, 24, 30, 37], [18, 19, 20, 21], [18, 12, 6, 0], [18, 24, 30, 31], [18, 24, 25, 31], [18, 19, 25, 31], [18, 24, 25, 26], [18, 19, 25, 26], [18, 19, 20, 26], [18, 19, 20, 14], [18, 19, 13, 14], [18, 12, 13, 14], [18, 19, 13, 7], [18, 12, 13, 7], [18, 12, 6, 7], [18, 19, 25, 24], [18, 24, 25, 19], [18, 12, 13, 19], [18, 19, 13, 12], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[19, 25, 31, 37], [19, 20, 21, 22], [19, 13, 7, 1], [19, 18, 24, 30], [19, 25, 24, 30], [19, 25, 31, 30], [19, 25, 31, 32], [19, 25, 26, 32], [19, 20, 26, 32], [19, 25, 26, 27], [19, 20, 26, 27], [19, 20, 21, 27], [19, 20, 21, 15], [19, 20, 14, 15], [19, 13, 14, 15], [19, 20, 14, 8], [19, 13, 14, 8], [19, 13, 7, 8], [19, 13, 7, 6], [19, 13, 12, 6], [19, 18, 12, 6], [19, 13, 12, 18], [19, 25, 24, 18], [19, 18, 24, 25], [19, 20, 26, 25], [19, 25, 26, 20], [19, 13, 14, 20], [19, 20, 14, 13], [19, 18, 12, 13], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[20, 26, 32, 37], [20, 21, 22, 23], [20, 14, 8, 2], [20, 19, 18, 24], [20, 19, 25, 24], [20, 26, 25, 24], [20, 19, 25, 31], [20, 26, 25, 31], [20, 26, 32, 31], [20, 26, 32, 33], [20, 26, 27, 33], [20, 21, 27, 33], [20, 26, 27, 28], [20, 21, 27, 28], [20, 21, 22, 28], [20, 21, 22, 16], [20, 21, 15, 16], [20, 14, 15, 16], [20, 21, 15, 9], [20, 14, 15, 9], [20, 14, 8, 9], [20, 14, 8, 7], [20, 14, 13, 7], [20, 19, 13, 7], [20, 14, 13, 12], [20, 19, 13, 12], [20, 19, 18, 12], [20, 14, 13, 19], [20, 26, 25, 19], [20, 19, 25, 26], [20, 21, 27, 26], [20, 26, 27, 21], [20, 14, 15, 21], [20, 21, 15, 14], [20, 19, 13, 14], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[21, 20, 19, 18], [21, 27, 33, 37], [21, 15, 9, 3], [21, 20, 19, 25], [21, 20, 26, 25], [21, 27, 26, 25], [21, 20, 26, 32], [21, 27, 26, 32], [21, 27, 33, 32], [21, 27, 33, 34], [21, 27, 28, 34], [21, 22, 28, 34], [21, 27, 28, 29], [21, 22, 28, 29], [21, 22, 23, 29], [21, 22, 23, 17], [21, 22, 16, 17], [21, 15, 16, 17], [21, 22, 16, 10], [21, 15, 16, 10], [21, 15, 9, 10], [21, 15, 9, 8], [21, 15, 14, 8], [21, 20, 14, 8], [21, 15, 14, 13], [21, 20, 14, 13], [21, 20, 19, 13], [21, 15, 14, 20], [21, 27, 26, 20], [21, 20, 26, 27], [21, 22, 28, 27], [21, 27, 28, 22], [21, 15, 16, 22], [21, 22, 16, 15], [21, 20, 14, 15], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[22, 21, 20, 19], [22, 28, 34, 37], [22, 16, 10, 4], [22, 21, 20, 26], [22, 21, 27, 26], [22, 28, 27, 26], [22, 21, 27, 33], [22, 28, 27, 33], [22, 28, 34, 33], [22, 28, 34, 35], [22, 28, 29, 35], [22, 23, 29, 35], [22, 23, 17, 11], [22, 16, 17, 11], [22, 16, 10, 11], [22, 16, 10, 9], [22, 16, 15, 9], [22, 21, 15, 9], [22, 16, 15, 14], [22, 21, 15, 14], [22, 21, 20, 14], [22, 16, 15, 21], [22, 28, 27, 21], [22, 21, 27, 28], [22, 23, 29, 28], [22, 28, 29, 23], [22, 16, 17, 23], [22, 23, 17, 16], [22, 21, 15, 16], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[23, 22, 21, 20], [23, 29, 35, 37], [23, 17, 11, 5], [23, 22, 21, 27], [23, 22, 28, 27], [23, 29, 28, 27], [23, 22, 28, 34], [23, 29, 28, 34], [23, 29, 35, 34], [23, 17, 11, 10], [23, 17, 16, 10], [23, 22, 16, 10], [23, 17, 16, 15], [23, 22, 16, 15], [23, 22, 21, 15], [23, 17, 16, 22], [23, 29, 28, 22], [23, 22, 28, 29], [23, 22, 16, 17], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[24, 25, 26, 27], [24, 18, 12, 6], [24, 30, 31, 37], [24, 25, 31, 37], [24, 30, 31, 32], [24, 25, 31, 32], [24, 25, 26, 32], [24, 25, 26, 20], [24, 25, 19, 20], [24, 18, 19, 20], [24, 25, 19, 13], [24, 18, 19, 13], [24, 18, 12, 13], [24, 25, 31, 30], [24, 30, 31, 25], [24, 18, 19, 25], [24, 25, 19, 18], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[25, 26, 27, 28], [25, 19, 13, 7], [25, 24, 30, 37], [25, 31, 30, 37], [25, 31, 32, 37], [25, 26, 32, 37], [25, 31, 32, 33], [25, 26, 32, 33], [25, 26, 27, 33], [25, 26, 27, 21], [25, 26, 20, 21], [25, 19, 20, 21], [25, 26, 20, 14], [25, 19, 20, 14], [25, 19, 13, 14], [25, 19, 13, 12], [25, 19, 18, 12], [25, 24, 18, 12], [25, 19, 18, 24], [25, 31, 30, 24], [25, 24, 30, 31], [25, 26, 32, 31], [25, 31, 32, 26], [25, 19, 20, 26], [25, 26, 20, 19], [25, 24, 18, 19], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[26, 27, 28, 29], [26, 20, 14, 8], [26, 25, 24, 30], [26, 25, 31, 30], [26, 32, 31, 30], [26, 25, 31, 37], [26, 32, 31, 37], [26, 32, 33, 37], [26, 27, 33, 37], [26, 32, 33, 34], [26, 27, 33, 34], [26, 27, 28, 34], [26, 27, 28, 22], [26, 27, 21, 22], [26, 20, 21, 22], [26, 27, 21, 15], [26, 20, 21, 15], [26, 20, 14, 15], [26, 20, 14, 13], [26, 20, 19, 13], [26, 25, 19, 13], [26, 20, 19, 18], [26, 25, 19, 18], [26, 25, 24, 18], [26, 20, 19, 25], [26, 32, 31, 25], [26, 25, 31, 32], [26, 27, 33, 32], [26, 32, 33, 27], [26, 20, 21, 27], [26, 27, 21, 20], [26, 25, 19, 20], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[27, 26, 25, 24], [27, 21, 15, 9], [27, 26, 25, 31], [27, 26, 32, 31], [27, 33, 32, 31], [27, 26, 32, 37], [27, 33, 32, 37], [27, 33, 34, 37], [27, 28, 34, 37], [27, 33, 34, 35], [27, 28, 34, 35], [27, 28, 29, 35], [27, 28, 29, 23], [27, 28, 22, 23], [27, 21, 22, 23], [27, 28, 22, 16], [27, 21, 22, 16], [27, 21, 15, 16], [27, 21, 15, 14], [27, 21, 20, 14], [27, 26, 20, 14], [27, 21, 20, 19], [27, 26, 20, 19], [27, 26, 25, 19], [27, 21, 20, 26], [27, 33, 32, 26], [27, 26, 32, 33], [27, 28, 34, 33], [27, 33, 34, 28], [27, 21, 22, 28], [27, 28, 22, 21], [27, 26, 20, 21], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[28, 27, 26, 25], [28, 22, 16, 10], [28, 27, 26, 32], [28, 27, 33, 32], [28, 34, 33, 32], [28, 27, 33, 37], [28, 34, 33, 37], [28, 34, 35, 37], [28, 29, 35, 37], [28, 29, 23, 17], [28, 22, 23, 17], [28, 22, 16, 17], [28, 22, 16, 15], [28, 22, 21, 15], [28, 27, 21, 15], [28, 22, 21, 20], [28, 27, 21, 20], [28, 27, 26, 20], [28, 22, 21, 27], [28, 34, 33, 27], [28, 27, 33, 34], [28, 29, 35, 34], [28, 34, 35, 29], [28, 22, 23, 29], [28, 29, 23, 22], [28, 27, 21, 22], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[29, 28, 27, 26], [29, 23, 17, 11], [29, 28, 27, 33], [29, 28, 34, 33], [29, 35, 34, 33], [29, 28, 34, 37], [29, 35, 34, 37], [29, 23, 17, 16], [29, 23, 22, 16], [29, 28, 22, 16], [29, 23, 22, 21], [29, 28, 22, 21], [29, 28, 27, 21], [29, 23, 22, 28], [29, 35, 34, 28], [29, 28, 34, 35], [29, 28, 22, 23], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[30, 31, 32, 33], [30, 24, 18, 12], [30, 31, 32, 37], [30, 31, 32, 26], [30, 31, 25, 26], [30, 24, 25, 26], [30, 31, 25, 19], [30, 24, 25, 19], [30, 24, 18, 19], [30, 24, 25, 31], [30, 31, 25, 24], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[31, 32, 33, 34], [31, 25, 19, 13], [31, 32, 33, 37], [31, 32, 33, 27], [31, 32, 26, 27], [31, 25, 26, 27], [31, 32, 26, 20], [31, 25, 26, 20], [31, 25, 19, 20], [31, 25, 19, 18], [31, 25, 24, 18], [31, 30, 24, 18], [31, 25, 24, 30], [31, 25, 26, 32], [31, 32, 26, 25], [31, 30, 24, 25], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[32, 33, 34, 35], [32, 26, 20, 14], [32, 31, 30, 37], [32, 33, 34, 37], [32, 33, 34, 28], [32, 33, 27, 28], [32, 26, 27, 28], [32, 33, 27, 21], [32, 26, 27, 21], [32, 26, 20, 21], [32, 26, 20, 19], [32, 26, 25, 19], [32, 31, 25, 19], [32, 26, 25, 24], [32, 31, 25, 24], [32, 31, 30, 24], [32, 26, 25, 31], [32, 26, 27, 33], [32, 33, 27, 26], [32, 31, 25, 26], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[33, 32, 31, 30], [33, 27, 21, 15], [33, 32, 31, 37], [33, 34, 35, 37], [33, 34, 35, 29], [33, 34, 28, 29], [33, 27, 28, 29], [33, 34, 28, 22], [33, 27, 28, 22], [33, 27, 21, 22], [33, 27, 21, 20], [33, 27, 26, 20], [33, 32, 26, 20], [33, 27, 26, 25], [33, 32, 26, 25], [33, 32, 31, 25], [33, 27, 26, 32], [33, 27, 28, 34], [33, 34, 28, 27], [33, 32, 26, 27], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[34, 33, 32, 31], [34, 28, 22, 16], [34, 33, 32, 37], [34, 35, 29, 23], [34, 28, 29, 23], [34, 28, 22, 23], [34, 28, 22, 21], [34, 28, 27, 21], [34, 33, 27, 21], [34, 28, 27, 26], [34, 33, 27, 26], [34, 33, 32, 26], [34, 28, 27, 33], [34, 28, 29, 35], [34, 35, 29, 28], [34, 33, 27, 28], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],
    [[35, 34, 33, 32], [35, 29, 23, 17], [35, 34, 33, 37], [35, 29, 23, 22], [35, 29, 28, 22], [35, 34, 28, 22], [35, 29, 28, 27], [35, 34, 28, 27], [35, 34, 33, 27], [35, 29, 28, 34], [35, 34, 28, 29], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4], [NULL; 4]],

];

pub const THREE_PATH_BACKTRACK_CHECKS: [[BitBoard; 40]; 36] = [
    [BitBoard(0b000000000000000000000000000000001000000000010000000000100000), BitBoard(0b000000000000000000000000000000000000000000000000000000000111), BitBoard(0b000000000000000000000000000000000000010000010000000000100000), BitBoard(0b000000000000000000000000000000000000000000100000100000100000), BitBoard(0b000000000000000000000000000000000000000000100000000001000001), BitBoard(0b000000000000000000000000000000000000000000000001100000100000), BitBoard(0b000000000000000000000000000000000000000000000001000001000001), BitBoard(0b000000000000000000000000000000000000000000000000000010000011), BitBoard(0b000000000000000000000000000000000000000000000000000000000011), BitBoard(0b000000000000000000000000000000000000000000000000100001000001), BitBoard(0b000000000000000000000000000000000000000000000000100001100000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000010000000000100000000001000000), BitBoard(0b000000000000000000000000000000000000000000000000000000001110), BitBoard(0b000000000000000000000000000000000000000000010000000000100001), BitBoard(0b000000000000000000000000000000000000000000010000100001000000), BitBoard(0b000000000000000000000000000000000000010000100000000001000000), BitBoard(0b000000000000000000000000000000000000100000100000000001000000), BitBoard(0b000000000000000000000000000000000000000001000001000001000000), BitBoard(0b000000000000000000000000000000000000000001000000000010000010), BitBoard(0b000000000000000000000000000000000000000000000011000001000000), BitBoard(0b000000000000000000000000000000000000000000000010000010000010), BitBoard(0b000000000000000000000000000000000000000000000000000100000110), BitBoard(0b000000000000000000000000000000000000000000000000000000000110), BitBoard(0b000000000000000000000000000000000000000000000000100001100000), BitBoard(0b000000000000000000000000000000000000000000000000100000100001), BitBoard(0b000000000000000000000000000000000000000000000001000010000010), BitBoard(0b000000000000000000000000000000000000000000000001000011000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000100000000001000000000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000000011100), BitBoard(0b000000000000000000000000000000000000000000000000000000100011), BitBoard(0b000000000000000000000000000000000000000000000000100001000010), BitBoard(0b000000000000000000000000000000000000000000000001100010000000), BitBoard(0b000000000000000000000000000000000000000000100000000001000010), BitBoard(0b000000000000000000000000000000000000000000100001000010000000), BitBoard(0b000000000000000000000000000000000000100001000000000010000000), BitBoard(0b000000000000000000000000000000000001000001000000000010000000), BitBoard(0b000000000000000000000000000000000000000010000010000010000000), BitBoard(0b000000000000000000000000000000000000000010000000000100000100), BitBoard(0b000000000000000000000000000000000000000000000110000010000000), BitBoard(0b000000000000000000000000000000000000000000000100000100000100), BitBoard(0b000000000000000000000000000000000000000000000000001000001100), BitBoard(0b000000000000000000000000000000000000000000000000000000001100), BitBoard(0b000000000000000000000000000000000000000000000000000000000011), BitBoard(0b000000000000000000000000000000000000000000000001000011000000), BitBoard(0b000000000000000000000000000000000000000000000001000001000010), BitBoard(0b000000000000000000000000000000000000000000000010000100000100), BitBoard(0b000000000000000000000000000000000000000000000010000110000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000111), BitBoard(0b000000000000000000000000000001000000000010000000000100000000), BitBoard(0b000000000000000000000000000000000000000000000000000001000110), BitBoard(0b000000000000000000000000000000000000000000000001000010000100), BitBoard(0b000000000000000000000000000000000000000000000011000100000000), BitBoard(0b000000000000000000000000000000000000000001000000000010000100), BitBoard(0b000000000000000000000000000000000000000001000010000100000000), BitBoard(0b000000000000000000000000000000000001000010000000000100000000), BitBoard(0b000000000000000000000000000000000010000010000000000100000000), BitBoard(0b000000000000000000000000000000000000000100000100000100000000), BitBoard(0b000000000000000000000000000000000000000100000000001000001000), BitBoard(0b000000000000000000000000000000000000000000001100000100000000), BitBoard(0b000000000000000000000000000000000000000000001000001000001000), BitBoard(0b000000000000000000000000000000000000000000000000010000011000), BitBoard(0b000000000000000000000000000000000000000000000000000000011000), BitBoard(0b000000000000000000000000000000000000000000000000000000000110), BitBoard(0b000000000000000000000000000000000000000000000010000110000000), BitBoard(0b000000000000000000000000000000000000000000000010000010000100), BitBoard(0b000000000000000000000000000000000000000000000100001000001000), BitBoard(0b000000000000000000000000000000000000000000000100001100000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000001110), BitBoard(0b000000000000000000000000000010000000000100000000001000000000), BitBoard(0b000000000000000000000000000000000000000000000000000010001100), BitBoard(0b000000000000000000000000000000000000000000000010000100001000), BitBoard(0b000000000000000000000000000000000000000000000110001000000000), BitBoard(0b000000000000000000000000000000000000000010000000000100001000), BitBoard(0b000000000000000000000000000000000000000010000100001000000000), BitBoard(0b000000000000000000000000000000000010000100000000001000000000), BitBoard(0b000000000000000000000000000000000100000100000000001000000000), BitBoard(0b000000000000000000000000000000000000001000001000001000000000), BitBoard(0b000000000000000000000000000000000000001000000000010000010000), BitBoard(0b000000000000000000000000000000000000000000000000000000001100), BitBoard(0b000000000000000000000000000000000000000000000100001100000000), BitBoard(0b000000000000000000000000000000000000000000000100000100001000), BitBoard(0b000000000000000000000000000000000000000000001000010000010000), BitBoard(0b000000000000000000000000000000000000000000001000011000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000011100), BitBoard(0b000000000000000000000000000100000000001000000000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000000100011000), BitBoard(0b000000000000000000000000000000000000000000000100001000010000), BitBoard(0b000000000000000000000000000000000000000000001100010000000000), BitBoard(0b000000000000000000000000000000000000000100000000001000010000), BitBoard(0b000000000000000000000000000000000000000100001000010000000000), BitBoard(0b000000000000000000000000000000000100001000000000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000011000), BitBoard(0b000000000000000000000000000000000000000000001000011000000000), BitBoard(0b000000000000000000000000000000000000000000001000001000010000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000100000000001000000000010000000000000000), BitBoard(0b000000000000000000000000000000000000000000000011100000000000), BitBoard(0b000000000000000000000000001000001000000000010000000000000000), BitBoard(0b000000000000000000000000000000010000010000010000000000000000), BitBoard(0b000000000000000000000000000000010000000000100000100000000000), BitBoard(0b000000000000000000000000000000000000110000010000000000000000), BitBoard(0b000000000000000000000000000000000000100000100000100000000000), BitBoard(0b000000000000000000000000000000000000000001000001100000000000), BitBoard(0b000000000000000000000000000000000000000000000001100010000000), BitBoard(0b000000000000000000000000000000000000000000000000100001000010), BitBoard(0b000000000000000000000000000000000000000000000000000000100011), BitBoard(0b000000000000000000000000000000000000000000000000100001000000), BitBoard(0b000000000000000000000000000000000000000000000000000000100001), BitBoard(0b000000000000000000000000000000000000010000100000100000000000), BitBoard(0b000000000000000000000000000000000000010000110000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000001100001), BitBoard(0b000000000000000000000000000000000000000000000000100001000001), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000001000000000010000000000100000000000000000), BitBoard(0b000000000000000000000000000000000000000000000111000000000000), BitBoard(0b000000000000000000000000000000001000000000010000100000000000), BitBoard(0b000000000000000000000000000000001000010000100000000000000000), BitBoard(0b000000000000000000000000001000010000000000100000000000000000), BitBoard(0b000000000000000000000000010000010000000000100000000000000000), BitBoard(0b000000000000000000000000000000100000100000100000000000000000), BitBoard(0b000000000000000000000000000000100000000001000001000000000000), BitBoard(0b000000000000000000000000000000000001100000100000000000000000), BitBoard(0b000000000000000000000000000000000001000001000001000000000000), BitBoard(0b000000000000000000000000000000000000000010000011000000000000), BitBoard(0b000000000000000000000000000000000000000000000011000100000000), BitBoard(0b000000000000000000000000000000000000000000000001000010000100), BitBoard(0b000000000000000000000000000000000000000000000000000001000110), BitBoard(0b000000000000000000000000000000000000000000000001000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000001000010), BitBoard(0b000000000000000000000000000000000000000000000000000001000001), BitBoard(0b000000000000000000000000000000000000000000000000100000100000), BitBoard(0b000000000000000000000000000000000000000000000000000001100001), BitBoard(0b000000000000000000000000000000000000010000110000000000000000), BitBoard(0b000000000000000000000000000000000000010000010000100000000000), BitBoard(0b000000000000000000000000000000000000100001000001000000000000), BitBoard(0b000000000000000000000000000000000000100001100000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000011000010), BitBoard(0b000000000000000000000000000000000000000000000001000010000010), BitBoard(0b000000000000000000000000000000000000000000000000100000100001), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000010000000000100000000001000000000000000000), BitBoard(0b000000000000000000000000000000000000000000001110000000000000), BitBoard(0b000000000000000000000000000000000000000000010001100000000000), BitBoard(0b000000000000000000000000000000000000010000100001000000000000), BitBoard(0b000000000000000000000000000000000000110001000000000000000000), BitBoard(0b000000000000000000000000000000010000000000100001000000000000), BitBoard(0b000000000000000000000000000000010000100001000000000000000000), BitBoard(0b000000000000000000000000010000100000000001000000000000000000), BitBoard(0b000000000000000000000000100000100000000001000000000000000000), BitBoard(0b000000000000000000000000000001000001000001000000000000000000), BitBoard(0b000000000000000000000000000001000000000010000010000000000000), BitBoard(0b000000000000000000000000000000000011000001000000000000000000), BitBoard(0b000000000000000000000000000000000010000010000010000000000000), BitBoard(0b000000000000000000000000000000000000000100000110000000000000), BitBoard(0b000000000000000000000000000000000000000000000110001000000000), BitBoard(0b000000000000000000000000000000000000000000000010000100001000), BitBoard(0b000000000000000000000000000000000000000000000000000010001100), BitBoard(0b000000000000000000000000000000000000000000000010000100000000), BitBoard(0b000000000000000000000000000000000000000000000000000010000100), BitBoard(0b000000000000000000000000000000000000000000000000000010000010), BitBoard(0b000000000000000000000000000000000000000000000001000001000000), BitBoard(0b000000000000000000000000000000000000000000000000000010000011), BitBoard(0b000000000000000000000000000000000000000000000001000001000001), BitBoard(0b000000000000000000000000000000000000000000000001100000100000), BitBoard(0b000000000000000000000000000000000000000000000000000011000010), BitBoard(0b000000000000000000000000000000000000100001100000000000000000), BitBoard(0b000000000000000000000000000000000000100000100001000000000000), BitBoard(0b000000000000000000000000000000000001000010000010000000000000), BitBoard(0b000000000000000000000000000000000001000011000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000110000100), BitBoard(0b000000000000000000000000000000000000000000000010000100000100), BitBoard(0b000000000000000000000000000000000000000000000001000001000010), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000011100000000000), BitBoard(0b000000000000000000100000000001000000000010000000000000000000), BitBoard(0b000000000000000000000000000000000000000000100011000000000000), BitBoard(0b000000000000000000000000000000000000100001000010000000000000), BitBoard(0b000000000000000000000000000000000001100010000000000000000000), BitBoard(0b000000000000000000000000000000100000000001000010000000000000), BitBoard(0b000000000000000000000000000000100001000010000000000000000000), BitBoard(0b000000000000000000000000100001000000000010000000000000000000), BitBoard(0b000000000000000000000001000001000000000010000000000000000000), BitBoard(0b000000000000000000000000000010000010000010000000000000000000), BitBoard(0b000000000000000000000000000010000000000100000100000000000000), BitBoard(0b000000000000000000000000000000000110000010000000000000000000), BitBoard(0b000000000000000000000000000000000100000100000100000000000000), BitBoard(0b000000000000000000000000000000000000001000001100000000000000), BitBoard(0b000000000000000000000000000000000000000000001100010000000000), BitBoard(0b000000000000000000000000000000000000000000000100001000010000), BitBoard(0b000000000000000000000000000000000000000000000000000100011000), BitBoard(0b000000000000000000000000000000000000000000000100001000000000), BitBoard(0b000000000000000000000000000000000000000000000000000100001000), BitBoard(0b000000000000000000000000000000000000000000000000000100000100), BitBoard(0b000000000000000000000000000000000000000000000010000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000100000110), BitBoard(0b000000000000000000000000000000000000000000000010000010000010), BitBoard(0b000000000000000000000000000000000000000000000011000001000000), BitBoard(0b000000000000000000000000000000000000000000000000000110000100), BitBoard(0b000000000000000000000000000000000001000011000000000000000000), BitBoard(0b000000000000000000000000000000000001000001000010000000000000), BitBoard(0b000000000000000000000000000000000010000100000100000000000000), BitBoard(0b000000000000000000000000000000000010000110000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000001100001000), BitBoard(0b000000000000000000000000000000000000000000000100001000001000), BitBoard(0b000000000000000000000000000000000000000000000010000010000100), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000111000000000000), BitBoard(0b000000000000000001000000000010000000000100000000000000000000), BitBoard(0b000000000000000000000000000000000000000001000110000000000000), BitBoard(0b000000000000000000000000000000000001000010000100000000000000), BitBoard(0b000000000000000000000000000000000011000100000000000000000000), BitBoard(0b000000000000000000000000000001000000000010000100000000000000), BitBoard(0b000000000000000000000000000001000010000100000000000000000000), BitBoard(0b000000000000000000000001000010000000000100000000000000000000), BitBoard(0b000000000000000000000010000010000000000100000000000000000000), BitBoard(0b000000000000000000000000000100000100000100000000000000000000), BitBoard(0b000000000000000000000000000100000000001000001000000000000000), BitBoard(0b000000000000000000000000000000000000000000001000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000001000010000), BitBoard(0b000000000000000000000000000000000000000000000000001000001000), BitBoard(0b000000000000000000000000000000000000000000000100000100000000), BitBoard(0b000000000000000000000000000000000000000000000000001000001100), BitBoard(0b000000000000000000000000000000000000000000000100000100000100), BitBoard(0b000000000000000000000000000000000000000000000110000010000000), BitBoard(0b000000000000000000000000000000000000000000000000001100001000), BitBoard(0b000000000000000000000000000000000010000110000000000000000000), BitBoard(0b000000000000000000000000000000000010000010000100000000000000), BitBoard(0b000000000000000000000000000000000100001000001000000000000000), BitBoard(0b000000000000000000000000000000000100001100000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000011000010000), BitBoard(0b000000000000000000000000000000000000000000001000010000010000), BitBoard(0b000000000000000000000000000000000000000000000100000100001000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000001110000000000000), BitBoard(0b000000000000000010000000000100000000001000000000000000000000), BitBoard(0b000000000000000000000000000000000000000010001100000000000000), BitBoard(0b000000000000000000000000000000000010000100001000000000000000), BitBoard(0b000000000000000000000000000000000110001000000000000000000000), BitBoard(0b000000000000000000000000000010000000000100001000000000000000), BitBoard(0b000000000000000000000000000010000100001000000000000000000000), BitBoard(0b000000000000000000000010000100000000001000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000010000010000), BitBoard(0b000000000000000000000000000000000000000000001000001000000000), BitBoard(0b000000000000000000000000000000000000000000000000010000011000), BitBoard(0b000000000000000000000000000000000000000000001000001000001000), BitBoard(0b000000000000000000000000000000000000000000001100000100000000), BitBoard(0b000000000000000000000000000000000000000000000000011000010000), BitBoard(0b000000000000000000000000000000000100001100000000000000000000), BitBoard(0b000000000000000000000000000000000100000100001000000000000000), BitBoard(0b000000000000000000000000000000000000000000001000001000010000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000010000000000100000000001000000000000000000000000000), BitBoard(0b000000000000000000000000000000000001110000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000010000000000100000), BitBoard(0b000000000000000100000100000000001000000000000000000000000000), BitBoard(0b000000000000000000001000001000001000000000000000000000000000), BitBoard(0b000000000000000000001000000000010000010000000000000000000000), BitBoard(0b000000000000000000000000011000001000000000000000000000000000), BitBoard(0b000000000000000000000000010000010000010000000000000000000000), BitBoard(0b000000000000000000000000000000100000110000000000000000000000), BitBoard(0b000000000000000000000000000000000000110001000000000000000000), BitBoard(0b000000000000000000000000000000000000010000100001000000000000), BitBoard(0b000000000000000000000000000000000000000000010001100000000000), BitBoard(0b000000000000000000000000000000000000010000100000000001000000), BitBoard(0b000000000000000000000000000000000000000000010000100001000000), BitBoard(0b000000000000000000000000000000000000000000010000000000100001), BitBoard(0b000000000000000000000000001000010000010000000000000000000000), BitBoard(0b000000000000000000000000001000011000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000110000100000000000), BitBoard(0b000000000000000000000000000000000000010000100000100000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000100000000001000000000010000000000000000000000000000), BitBoard(0b000000000000000000000000000000000011100000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000100000000001000000), BitBoard(0b000000000000000000000100000000001000010000000000000000000000), BitBoard(0b000000000000000000000100001000010000000000000000000000000000), BitBoard(0b000000000000000100001000000000010000000000000000000000000000), BitBoard(0b000000000000001000001000000000010000000000000000000000000000), BitBoard(0b000000000000000000010000010000010000000000000000000000000000), BitBoard(0b000000000000000000010000000000100000100000000000000000000000), BitBoard(0b000000000000000000000000110000010000000000000000000000000000), BitBoard(0b000000000000000000000000100000100000100000000000000000000000), BitBoard(0b000000000000000000000000000001000001100000000000000000000000), BitBoard(0b000000000000000000000000000000000001100010000000000000000000), BitBoard(0b000000000000000000000000000000000000100001000010000000000000), BitBoard(0b000000000000000000000000000000000000000000100011000000000000), BitBoard(0b000000000000000000000000000000000000100001000000000010000000), BitBoard(0b000000000000000000000000000000000000000000100001000010000000), BitBoard(0b000000000000000000000000000000000000000000100000000001000010), BitBoard(0b000000000000000000000000000000000000000000100000000001000001), BitBoard(0b000000000000000000000000000000000000000000100000100000100000), BitBoard(0b000000000000000000000000000000000000010000010000000000100000), BitBoard(0b000000000000000000000000000000000000000000110000100000000000), BitBoard(0b000000000000000000000000001000011000000000000000000000000000), BitBoard(0b000000000000000000000000001000001000010000000000000000000000), BitBoard(0b000000000000000000000000010000100000100000000000000000000000), BitBoard(0b000000000000000000000000010000110000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000001100001000000000000), BitBoard(0b000000000000000000000000000000000000100001000001000000000000), BitBoard(0b000000000000000000000000000000000000010000010000100000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000001000000000010000000000100000000000000000000000000000), BitBoard(0b000000000000000000000000000000000111000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000001000000000010000000), BitBoard(0b000000000000000000000000000000001000110000000000000000000000), BitBoard(0b000000000000000000000000001000010000100000000000000000000000), BitBoard(0b000000000000000000000000011000100000000000000000000000000000), BitBoard(0b000000000000000000001000000000010000100000000000000000000000), BitBoard(0b000000000000000000001000010000100000000000000000000000000000), BitBoard(0b000000000000001000010000000000100000000000000000000000000000), BitBoard(0b000000000000010000010000000000100000000000000000000000000000), BitBoard(0b000000000000000000100000100000100000000000000000000000000000), BitBoard(0b000000000000000000100000000001000001000000000000000000000000), BitBoard(0b000000000000000000000001100000100000000000000000000000000000), BitBoard(0b000000000000000000000001000001000001000000000000000000000000), BitBoard(0b000000000000000000000000000010000011000000000000000000000000), BitBoard(0b000000000000000000000000000000000011000100000000000000000000), BitBoard(0b000000000000000000000000000000000001000010000100000000000000), BitBoard(0b000000000000000000000000000000000000000001000110000000000000), BitBoard(0b000000000000000000000000000000000001000010000000000100000000), BitBoard(0b000000000000000000000000000000000000000001000010000100000000), BitBoard(0b000000000000000000000000000000000000000001000000000010000100), BitBoard(0b000000000000000000000000000000000000000001000000000010000010), BitBoard(0b000000000000000000000000000000000000000001000001000001000000), BitBoard(0b000000000000000000000000000000000000100000100000000001000000), BitBoard(0b000000000000000000000000000000000000000001000001100000000000), BitBoard(0b000000000000000000000000000000000000100000100000100000000000), BitBoard(0b000000000000000000000000000000000000110000010000000000000000), BitBoard(0b000000000000000000000000000000000000000001100001000000000000), BitBoard(0b000000000000000000000000010000110000000000000000000000000000), BitBoard(0b000000000000000000000000010000010000100000000000000000000000), BitBoard(0b000000000000000000000000100001000001000000000000000000000000), BitBoard(0b000000000000000000000000100001100000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000011000010000000000000), BitBoard(0b000000000000000000000000000000000001000010000010000000000000), BitBoard(0b000000000000000000000000000000000000100000100001000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000001110000000000000000000000), BitBoard(0b000000010000000000100000000001000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000010000000000100000000), BitBoard(0b000000000000000000000000000000010001100000000000000000000000), BitBoard(0b000000000000000000000000010000100001000000000000000000000000), BitBoard(0b000000000000000000000000110001000000000000000000000000000000), BitBoard(0b000000000000000000010000000000100001000000000000000000000000), BitBoard(0b000000000000000000010000100001000000000000000000000000000000), BitBoard(0b000000000000010000100000000001000000000000000000000000000000), BitBoard(0b000000000000100000100000000001000000000000000000000000000000), BitBoard(0b000000000000000001000001000001000000000000000000000000000000), BitBoard(0b000000000000000001000000000010000010000000000000000000000000), BitBoard(0b000000000000000000000011000001000000000000000000000000000000), BitBoard(0b000000000000000000000010000010000010000000000000000000000000), BitBoard(0b000000000000000000000000000100000110000000000000000000000000), BitBoard(0b000000000000000000000000000000000110001000000000000000000000), BitBoard(0b000000000000000000000000000000000010000100001000000000000000), BitBoard(0b000000000000000000000000000000000000000010001100000000000000), BitBoard(0b000000000000000000000000000000000010000100000000001000000000), BitBoard(0b000000000000000000000000000000000000000010000100001000000000), BitBoard(0b000000000000000000000000000000000000000010000000000100001000), BitBoard(0b000000000000000000000000000000000000000010000000000100000100), BitBoard(0b000000000000000000000000000000000000000010000010000010000000), BitBoard(0b000000000000000000000000000000000001000001000000000010000000), BitBoard(0b000000000000000000000000000000000000000010000011000000000000), BitBoard(0b000000000000000000000000000000000001000001000001000000000000), BitBoard(0b000000000000000000000000000000000001100000100000000000000000), BitBoard(0b000000000000000000000000000000000000000011000010000000000000), BitBoard(0b000000000000000000000000100001100000000000000000000000000000), BitBoard(0b000000000000000000000000100000100001000000000000000000000000), BitBoard(0b000000000000000000000001000010000010000000000000000000000000), BitBoard(0b000000000000000000000001000011000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000110000100000000000000), BitBoard(0b000000000000000000000000000000000010000100000100000000000000), BitBoard(0b000000000000000000000000000000000001000001000010000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000011100000000000000000000000), BitBoard(0b000000100000000001000000000010000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000100000000001000000000), BitBoard(0b000000000000000000000000000000100011000000000000000000000000), BitBoard(0b000000000000000000000000100001000010000000000000000000000000), BitBoard(0b000000000000000000000001100010000000000000000000000000000000), BitBoard(0b000000000000000000100000000001000010000000000000000000000000), BitBoard(0b000000000000000000100001000010000000000000000000000000000000), BitBoard(0b000000000000100001000000000010000000000000000000000000000000), BitBoard(0b000000000001000001000000000010000000000000000000000000000000), BitBoard(0b000000000000000010000010000010000000000000000000000000000000), BitBoard(0b000000000000000010000000000100000100000000000000000000000000), BitBoard(0b000000000000000000000000000000000100001000000000010000000000), BitBoard(0b000000000000000000000000000000000000000100001000010000000000), BitBoard(0b000000000000000000000000000000000000000100000000001000010000), BitBoard(0b000000000000000000000000000000000000000100000000001000001000), BitBoard(0b000000000000000000000000000000000000000100000100000100000000), BitBoard(0b000000000000000000000000000000000010000010000000000100000000), BitBoard(0b000000000000000000000000000000000000000100000110000000000000), BitBoard(0b000000000000000000000000000000000010000010000010000000000000), BitBoard(0b000000000000000000000000000000000011000001000000000000000000), BitBoard(0b000000000000000000000000000000000000000110000100000000000000), BitBoard(0b000000000000000000000001000011000000000000000000000000000000), BitBoard(0b000000000000000000000001000001000010000000000000000000000000), BitBoard(0b000000000000000000000010000100000100000000000000000000000000), BitBoard(0b000000000000000000000010000110000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000001100001000000000000000), BitBoard(0b000000000000000000000000000000000100001000001000000000000000), BitBoard(0b000000000000000000000000000000000010000010000100000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000111000000000000000000000000), BitBoard(0b000001000000000010000000000100000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000001000000000010000000000), BitBoard(0b000000000000000000000000000001000110000000000000000000000000), BitBoard(0b000000000000000000000001000010000100000000000000000000000000), BitBoard(0b000000000000000000000011000100000000000000000000000000000000), BitBoard(0b000000000000000001000000000010000100000000000000000000000000), BitBoard(0b000000000000000001000010000100000000000000000000000000000000), BitBoard(0b000000000001000010000000000100000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000001000000000010000010000), BitBoard(0b000000000000000000000000000000000000001000001000001000000000), BitBoard(0b000000000000000000000000000000000100000100000000001000000000), BitBoard(0b000000000000000000000000000000000000001000001100000000000000), BitBoard(0b000000000000000000000000000000000100000100000100000000000000), BitBoard(0b000000000000000000000000000000000110000010000000000000000000), BitBoard(0b000000000000000000000000000000000000001100001000000000000000), BitBoard(0b000000000000000000000010000110000000000000000000000000000000), BitBoard(0b000000000000000000000010000010000100000000000000000000000000), BitBoard(0b000000000000000000000000000000000100000100001000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000010000000000100000000000000000000000000000000000000), BitBoard(0b000000000000000000000000111000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000001000000000010000000000100000), BitBoard(0b000010000010000000000100000000000000000000000000000000000000), BitBoard(0b000000000100000100000100000000000000000000000000000000000000), BitBoard(0b000000000100000000001000001000000000000000000000000000000000), BitBoard(0b000000000000001100000100000000000000000000000000000000000000), BitBoard(0b000000000000001000001000001000000000000000000000000000000000), BitBoard(0b000000000000000000010000011000000000000000000000000000000000), BitBoard(0b000000000000000000000000011000100000000000000000000000000000), BitBoard(0b000000000000000000000000001000010000100000000000000000000000), BitBoard(0b000000000000000000000000000000001000110000000000000000000000), BitBoard(0b000000000000000000000000001000010000000000100000000000000000), BitBoard(0b000000000000000000000000000000001000010000100000000000000000), BitBoard(0b000000000000000000000000000000001000000000010000100000000000), BitBoard(0b000000000000000100001000001000000000000000000000000000000000), BitBoard(0b000000000000000100001100000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000011000010000000000000000000000), BitBoard(0b000000000000000000000000001000010000010000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000100000000001000000000000000000000000000000000000000), BitBoard(0b000000000000000000000001110000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000010000000000100000000001000000), BitBoard(0b000000000010000000000100001000000000000000000000000000000000), BitBoard(0b000000000010000100001000000000000000000000000000000000000000), BitBoard(0b000010000100000000001000000000000000000000000000000000000000), BitBoard(0b000100000100000000001000000000000000000000000000000000000000), BitBoard(0b000000001000001000001000000000000000000000000000000000000000), BitBoard(0b000000001000000000010000010000000000000000000000000000000000), BitBoard(0b000000000000011000001000000000000000000000000000000000000000), BitBoard(0b000000000000010000010000010000000000000000000000000000000000), BitBoard(0b000000000000000000100000110000000000000000000000000000000000), BitBoard(0b000000000000000000000000110001000000000000000000000000000000), BitBoard(0b000000000000000000000000010000100001000000000000000000000000), BitBoard(0b000000000000000000000000000000010001100000000000000000000000), BitBoard(0b000000000000000000000000010000100000000001000000000000000000), BitBoard(0b000000000000000000000000000000010000100001000000000000000000), BitBoard(0b000000000000000000000000000000010000000000100001000000000000), BitBoard(0b000000000000000000000000000000010000000000100000100000000000), BitBoard(0b000000000000000000000000000000010000010000010000000000000000), BitBoard(0b000000000000000000000000001000001000000000010000000000000000), BitBoard(0b000000000000000000000000000000011000010000000000000000000000), BitBoard(0b000000000000000100001100000000000000000000000000000000000000), BitBoard(0b000000000000000100000100001000000000000000000000000000000000), BitBoard(0b000000000000001000010000010000000000000000000000000000000000), BitBoard(0b000000000000001000011000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000110000100000000000000000000000), BitBoard(0b000000000000000000000000010000100000100000000000000000000000), BitBoard(0b000000000000000000000000001000001000010000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000001000000000010000000000000000000000000000000000000000), BitBoard(0b000000000000000000000011100000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000100000000001000000000010000000), BitBoard(0b000000000000000000000100011000000000000000000000000000000000), BitBoard(0b000000000000000100001000010000000000000000000000000000000000), BitBoard(0b000000000000001100010000000000000000000000000000000000000000), BitBoard(0b000000000100000000001000010000000000000000000000000000000000), BitBoard(0b000000000100001000010000000000000000000000000000000000000000), BitBoard(0b000100001000000000010000000000000000000000000000000000000000), BitBoard(0b001000001000000000010000000000000000000000000000000000000000), BitBoard(0b000000010000010000010000000000000000000000000000000000000000), BitBoard(0b000000010000000000100000100000000000000000000000000000000000), BitBoard(0b000000000000110000010000000000000000000000000000000000000000), BitBoard(0b000000000000100000100000100000000000000000000000000000000000), BitBoard(0b000000000000000001000001100000000000000000000000000000000000), BitBoard(0b000000000000000000000001100010000000000000000000000000000000), BitBoard(0b000000000000000000000000100001000010000000000000000000000000), BitBoard(0b000000000000000000000000000000100011000000000000000000000000), BitBoard(0b000000000000000000000000100001000000000010000000000000000000), BitBoard(0b000000000000000000000000000000100001000010000000000000000000), BitBoard(0b000000000000000000000000000000100000000001000010000000000000), BitBoard(0b000000000000000000000000000000100000000001000001000000000000), BitBoard(0b000000000000000000000000000000100000100000100000000000000000), BitBoard(0b000000000000000000000000010000010000000000100000000000000000), BitBoard(0b000000000000000000000000000000100000110000000000000000000000), BitBoard(0b000000000000000000000000010000010000010000000000000000000000), BitBoard(0b000000000000000000000000011000001000000000000000000000000000), BitBoard(0b000000000000000000000000000000110000100000000000000000000000), BitBoard(0b000000000000001000011000000000000000000000000000000000000000), BitBoard(0b000000000000001000001000010000000000000000000000000000000000), BitBoard(0b000000000000010000100000100000000000000000000000000000000000), BitBoard(0b000000000000010000110000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000001100001000000000000000000000000), BitBoard(0b000000000000000000000000100001000001000000000000000000000000), BitBoard(0b000000000000000000000000010000010000100000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000111000000000000000000000000000000000), BitBoard(0b000000010000000000100000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000001000000000010000000000100000000), BitBoard(0b000000000000000000001000110000000000000000000000000000000000), BitBoard(0b000000000000001000010000100000000000000000000000000000000000), BitBoard(0b000000000000011000100000000000000000000000000000000000000000), BitBoard(0b000000001000000000010000100000000000000000000000000000000000), BitBoard(0b000000001000010000100000000000000000000000000000000000000000), BitBoard(0b001000010000000000100000000000000000000000000000000000000000), BitBoard(0b010000010000000000100000000000000000000000000000000000000000), BitBoard(0b000000100000100000100000000000000000000000000000000000000000), BitBoard(0b000000100000000001000001000000000000000000000000000000000000), BitBoard(0b000000000001100000100000000000000000000000000000000000000000), BitBoard(0b000000000001000001000001000000000000000000000000000000000000), BitBoard(0b000000000000000010000011000000000000000000000000000000000000), BitBoard(0b000000000000000000000011000100000000000000000000000000000000), BitBoard(0b000000000000000000000001000010000100000000000000000000000000), BitBoard(0b000000000000000000000000000001000110000000000000000000000000), BitBoard(0b000000000000000000000001000010000000000100000000000000000000), BitBoard(0b000000000000000000000000000001000010000100000000000000000000), BitBoard(0b000000000000000000000000000001000000000010000100000000000000), BitBoard(0b000000000000000000000000000001000000000010000010000000000000), BitBoard(0b000000000000000000000000000001000001000001000000000000000000), BitBoard(0b000000000000000000000000100000100000000001000000000000000000), BitBoard(0b000000000000000000000000000001000001100000000000000000000000), BitBoard(0b000000000000000000000000100000100000100000000000000000000000), BitBoard(0b000000000000000000000000110000010000000000000000000000000000), BitBoard(0b000000000000000000000000000001100001000000000000000000000000), BitBoard(0b000000000000010000110000000000000000000000000000000000000000), BitBoard(0b000000000000010000010000100000000000000000000000000000000000), BitBoard(0b000000000000100001000001000000000000000000000000000000000000), BitBoard(0b000000000000100001100000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000011000010000000000000000000000000), BitBoard(0b000000000000000000000001000010000010000000000000000000000000), BitBoard(0b000000000000000000000000100000100001000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000001110000000000000000000000000000000000), BitBoard(0b000000100000000001000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000010000000000100000000001000000000), BitBoard(0b000000000000000000010001100000000000000000000000000000000000), BitBoard(0b000000000000010000100001000000000000000000000000000000000000), BitBoard(0b000000000000110001000000000000000000000000000000000000000000), BitBoard(0b000000010000000000100001000000000000000000000000000000000000), BitBoard(0b000000010000100001000000000000000000000000000000000000000000), BitBoard(0b010000100000000001000000000000000000000000000000000000000000), BitBoard(0b100000100000000001000000000000000000000000000000000000000000), BitBoard(0b000001000001000001000000000000000000000000000000000000000000), BitBoard(0b000001000000000010000010000000000000000000000000000000000000), BitBoard(0b000000000000000000000010000100000000001000000000000000000000), BitBoard(0b000000000000000000000000000010000100001000000000000000000000), BitBoard(0b000000000000000000000000000010000000000100001000000000000000), BitBoard(0b000000000000000000000000000010000000000100000100000000000000), BitBoard(0b000000000000000000000000000010000010000010000000000000000000), BitBoard(0b000000000000000000000001000001000000000010000000000000000000), BitBoard(0b000000000000000000000000000010000011000000000000000000000000), BitBoard(0b000000000000000000000001000001000001000000000000000000000000), BitBoard(0b000000000000000000000001100000100000000000000000000000000000), BitBoard(0b000000000000000000000000000011000010000000000000000000000000), BitBoard(0b000000000000100001100000000000000000000000000000000000000000), BitBoard(0b000000000000100000100001000000000000000000000000000000000000), BitBoard(0b000000000001000010000010000000000000000000000000000000000000), BitBoard(0b000000000001000011000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000110000100000000000000000000000000), BitBoard(0b000000000000000000000010000100000100000000000000000000000000), BitBoard(0b000000000000000000000001000001000010000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000011100000000000000000000000000000000000), BitBoard(0b000001000000000010000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000100000000001000000000010000000000), BitBoard(0b000000000000000000100011000000000000000000000000000000000000), BitBoard(0b000000000000100001000010000000000000000000000000000000000000), BitBoard(0b000000000001100010000000000000000000000000000000000000000000), BitBoard(0b000000100000000001000010000000000000000000000000000000000000), BitBoard(0b000000100001000010000000000000000000000000000000000000000000), BitBoard(0b100001000000000010000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000100000000001000001000000000000000), BitBoard(0b000000000000000000000000000100000100000100000000000000000000), BitBoard(0b000000000000000000000010000010000000000100000000000000000000), BitBoard(0b000000000000000000000000000100000110000000000000000000000000), BitBoard(0b000000000000000000000010000010000010000000000000000000000000), BitBoard(0b000000000000000000000011000001000000000000000000000000000000), BitBoard(0b000000000000000000000000000110000100000000000000000000000000), BitBoard(0b000000000001000011000000000000000000000000000000000000000000), BitBoard(0b000000000001000001000010000000000000000000000000000000000000), BitBoard(0b000000000000000000000010000010000100000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000011100000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000100000000001000000000010000000000000000), BitBoard(0b000010000010000000000000000000000000000000000000000000000000), BitBoard(0b000000000100000100000000000000000000000000000000000000000000), BitBoard(0b000110000010000000000000000000000000000000000000000000000000), BitBoard(0b000100000100000100000000000000000000000000000000000000000000), BitBoard(0b000000001000001100000000000000000000000000000000000000000000), BitBoard(0b000000000000001100010000000000000000000000000000000000000000), BitBoard(0b000000000000000100001000010000000000000000000000000000000000), BitBoard(0b000000000000000000000100011000000000000000000000000000000000), BitBoard(0b000000000000000100001000000000010000000000000000000000000000), BitBoard(0b000000000000000000000100001000010000000000000000000000000000), BitBoard(0b000000000000000000000100000000001000010000000000000000000000), BitBoard(0b000010000100000100000000000000000000000000000000000000000000), BitBoard(0b000010000110000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000001100001000000000000000000000000000000000), BitBoard(0b000000000000000100001000001000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000111000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000001000000000010000000000100000000000000000), BitBoard(0b000000000010000100000000000000000000000000000000000000000000), BitBoard(0b000010000100000000000000000000000000000000000000000000000000), BitBoard(0b000100000100000000000000000000000000000000000000000000000000), BitBoard(0b000000001000001000000000000000000000000000000000000000000000), BitBoard(0b001100000100000000000000000000000000000000000000000000000000), BitBoard(0b001000001000001000000000000000000000000000000000000000000000), BitBoard(0b000000010000011000000000000000000000000000000000000000000000), BitBoard(0b000000000000011000100000000000000000000000000000000000000000), BitBoard(0b000000000000001000010000100000000000000000000000000000000000), BitBoard(0b000000000000000000001000110000000000000000000000000000000000), BitBoard(0b000000000000001000010000000000100000000000000000000000000000), BitBoard(0b000000000000000000001000010000100000000000000000000000000000), BitBoard(0b000000000000000000001000000000010000100000000000000000000000), BitBoard(0b000000000000000000001000000000010000010000000000000000000000), BitBoard(0b000000000000000000001000001000001000000000000000000000000000), BitBoard(0b000000000000000100000100000000001000000000000000000000000000), BitBoard(0b000000000000000000001100001000000000000000000000000000000000), BitBoard(0b000010000110000000000000000000000000000000000000000000000000), BitBoard(0b000010000010000100000000000000000000000000000000000000000000), BitBoard(0b000100001000001000000000000000000000000000000000000000000000), BitBoard(0b000100001100000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000011000010000000000000000000000000000000000), BitBoard(0b000000000000001000010000010000000000000000000000000000000000), BitBoard(0b000000000000000100000100001000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000001110000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000010000000000100000000001000000000000000000), BitBoard(0b000000000010001100000000000000000000000000000000000000000000), BitBoard(0b000010000100001000000000000000000000000000000000000000000000), BitBoard(0b000110001000000000000000000000000000000000000000000000000000), BitBoard(0b000000000100001000000000000000000000000000000000000000000000), BitBoard(0b000100001000000000000000000000000000000000000000000000000000), BitBoard(0b001000001000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000010000000000000000000000000000000000000000000000), BitBoard(0b011000001000000000000000000000000000000000000000000000000000), BitBoard(0b010000010000010000000000000000000000000000000000000000000000), BitBoard(0b000000100000110000000000000000000000000000000000000000000000), BitBoard(0b000000000000110001000000000000000000000000000000000000000000), BitBoard(0b000000000000010000100001000000000000000000000000000000000000), BitBoard(0b000000000000000000010001100000000000000000000000000000000000), BitBoard(0b000000000000010000100000000001000000000000000000000000000000), BitBoard(0b000000000000000000010000100001000000000000000000000000000000), BitBoard(0b000000000000000000010000000000100001000000000000000000000000), BitBoard(0b000000000000000000010000000000100000100000000000000000000000), BitBoard(0b000000000000000000010000010000010000000000000000000000000000), BitBoard(0b000000000000001000001000000000010000000000000000000000000000), BitBoard(0b000000000000000000010000011000000000000000000000000000000000), BitBoard(0b000000000000001000001000001000000000000000000000000000000000), BitBoard(0b000000000000001100000100000000000000000000000000000000000000), BitBoard(0b000000000000000000011000010000000000000000000000000000000000), BitBoard(0b000100001100000000000000000000000000000000000000000000000000), BitBoard(0b000100000100001000000000000000000000000000000000000000000000), BitBoard(0b001000010000010000000000000000000000000000000000000000000000), BitBoard(0b001000011000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000110000100000000000000000000000000000000000), BitBoard(0b000000000000010000100000100000000000000000000000000000000000), BitBoard(0b000000000000001000001000010000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000011100000000000000000000000000000000000000000000), BitBoard(0b000000000000000000100000000001000000000010000000000000000000), BitBoard(0b000000000100011000000000000000000000000000000000000000000000), BitBoard(0b000100001000010000000000000000000000000000000000000000000000), BitBoard(0b001100010000000000000000000000000000000000000000000000000000), BitBoard(0b000000001000010000000000000000000000000000000000000000000000), BitBoard(0b001000010000000000000000000000000000000000000000000000000000), BitBoard(0b010000010000000000000000000000000000000000000000000000000000), BitBoard(0b000000100000100000000000000000000000000000000000000000000000), BitBoard(0b110000010000000000000000000000000000000000000000000000000000), BitBoard(0b100000100000100000000000000000000000000000000000000000000000), BitBoard(0b000001000001100000000000000000000000000000000000000000000000), BitBoard(0b000000000001100010000000000000000000000000000000000000000000), BitBoard(0b000000000000100001000010000000000000000000000000000000000000), BitBoard(0b000000000000000000100011000000000000000000000000000000000000), BitBoard(0b000000000000100001000000000010000000000000000000000000000000), BitBoard(0b000000000000000000100001000010000000000000000000000000000000), BitBoard(0b000000000000000000100000000001000010000000000000000000000000), BitBoard(0b000000000000000000100000000001000001000000000000000000000000), BitBoard(0b000000000000000000100000100000100000000000000000000000000000), BitBoard(0b000000000000010000010000000000100000000000000000000000000000), BitBoard(0b000000000000000000100000110000000000000000000000000000000000), BitBoard(0b000000000000010000010000010000000000000000000000000000000000), BitBoard(0b000000000000011000001000000000000000000000000000000000000000), BitBoard(0b000000000000000000110000100000000000000000000000000000000000), BitBoard(0b001000011000000000000000000000000000000000000000000000000000), BitBoard(0b001000001000010000000000000000000000000000000000000000000000), BitBoard(0b010000100000100000000000000000000000000000000000000000000000), BitBoard(0b010000110000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000001100001000000000000000000000000000000000000), BitBoard(0b000000000000100001000001000000000000000000000000000000000000), BitBoard(0b000000000000010000010000100000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000111000000000000000000000000000000000000000000000), BitBoard(0b000000000000000001000000000010000000000100000000000000000000), BitBoard(0b000000001000110000000000000000000000000000000000000000000000), BitBoard(0b001000010000100000000000000000000000000000000000000000000000), BitBoard(0b011000100000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000100000000000000000000000000000000000000000000000), BitBoard(0b010000100000000000000000000000000000000000000000000000000000), BitBoard(0b100000100000000000000000000000000000000000000000000000000000), BitBoard(0b000001000001000000000000000000000000000000000000000000000000), BitBoard(0b000000000001000010000000000100000000000000000000000000000000), BitBoard(0b000000000000000001000010000100000000000000000000000000000000), BitBoard(0b000000000000000001000000000010000100000000000000000000000000), BitBoard(0b000000000000000001000000000010000010000000000000000000000000), BitBoard(0b000000000000000001000001000001000000000000000000000000000000), BitBoard(0b000000000000100000100000000001000000000000000000000000000000), BitBoard(0b000000000000000001000001100000000000000000000000000000000000), BitBoard(0b000000000000100000100000100000000000000000000000000000000000), BitBoard(0b000000000000110000010000000000000000000000000000000000000000), BitBoard(0b000000000000000001100001000000000000000000000000000000000000), BitBoard(0b010000110000000000000000000000000000000000000000000000000000), BitBoard(0b010000010000100000000000000000000000000000000000000000000000), BitBoard(0b100001000001000000000000000000000000000000000000000000000000), BitBoard(0b100001100000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000011000010000000000000000000000000000000000000), BitBoard(0b000000000001000010000010000000000000000000000000000000000000), BitBoard(0b000000000000100000100001000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000001110000000000000000000000000000000000000000000000), BitBoard(0b000000000000000010000000000100000000001000000000000000000000), BitBoard(0b000000010001100000000000000000000000000000000000000000000000), BitBoard(0b010000100001000000000000000000000000000000000000000000000000), BitBoard(0b110001000000000000000000000000000000000000000000000000000000), BitBoard(0b000000100001000000000000000000000000000000000000000000000000), BitBoard(0b100001000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000010000000000100000100000000000000000000000000), BitBoard(0b000000000000000010000010000010000000000000000000000000000000), BitBoard(0b000000000001000001000000000010000000000000000000000000000000), BitBoard(0b000000000000000010000011000000000000000000000000000000000000), BitBoard(0b000000000001000001000001000000000000000000000000000000000000), BitBoard(0b000000000001100000100000000000000000000000000000000000000000), BitBoard(0b000000000000000011000010000000000000000000000000000000000000), BitBoard(0b100001100000000000000000000000000000000000000000000000000000), BitBoard(0b100000100001000000000000000000000000000000000000000000000000), BitBoard(0b000000000001000001000010000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b001110000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000010000000000100000000001000000000000000000000000000), BitBoard(0b000110000000000000000000000000000000000000000000000000000000), BitBoard(0b000110001000000000000000000000000000000000000000000000000000), BitBoard(0b000010000100001000000000000000000000000000000000000000000000), BitBoard(0b000000000010001100000000000000000000000000000000000000000000), BitBoard(0b000010000100000000001000000000000000000000000000000000000000), BitBoard(0b000000000010000100001000000000000000000000000000000000000000), BitBoard(0b000000000010000000000100001000000000000000000000000000000000), BitBoard(0b000000000110000100000000000000000000000000000000000000000000), BitBoard(0b000010000100000100000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b011100000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000100000000001000000000010000000000000000000000000000), BitBoard(0b001100000000000000000000000000000000000000000000000000000000), BitBoard(0b001100010000000000000000000000000000000000000000000000000000), BitBoard(0b000100001000010000000000000000000000000000000000000000000000), BitBoard(0b000000000100011000000000000000000000000000000000000000000000), BitBoard(0b000100001000000000010000000000000000000000000000000000000000), BitBoard(0b000000000100001000010000000000000000000000000000000000000000), BitBoard(0b000000000100000000001000010000000000000000000000000000000000), BitBoard(0b000000000100000000001000001000000000000000000000000000000000), BitBoard(0b000000000100000100000100000000000000000000000000000000000000), BitBoard(0b000010000010000000000100000000000000000000000000000000000000), BitBoard(0b000000000110000100000000000000000000000000000000000000000000), BitBoard(0b000000001100001000000000000000000000000000000000000000000000), BitBoard(0b000100001000001000000000000000000000000000000000000000000000), BitBoard(0b000010000010000100000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b111000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000001000000000010000000000100000000000000000000000000000), BitBoard(0b000110000000000000000000000000000000000000000000000000000000), BitBoard(0b011000000000000000000000000000000000000000000000000000000000), BitBoard(0b011000100000000000000000000000000000000000000000000000000000), BitBoard(0b001000010000100000000000000000000000000000000000000000000000), BitBoard(0b000000001000110000000000000000000000000000000000000000000000), BitBoard(0b001000010000000000100000000000000000000000000000000000000000), BitBoard(0b000000001000010000100000000000000000000000000000000000000000), BitBoard(0b000000001000000000010000100000000000000000000000000000000000), BitBoard(0b000000001000000000010000010000000000000000000000000000000000), BitBoard(0b000000001000001000001000000000000000000000000000000000000000), BitBoard(0b000100000100000000001000000000000000000000000000000000000000), BitBoard(0b000000001000001100000000000000000000000000000000000000000000), BitBoard(0b000100000100000100000000000000000000000000000000000000000000), BitBoard(0b000110000010000000000000000000000000000000000000000000000000), BitBoard(0b000000001100001000000000000000000000000000000000000000000000), BitBoard(0b000000011000010000000000000000000000000000000000000000000000), BitBoard(0b001000010000010000000000000000000000000000000000000000000000), BitBoard(0b000100000100001000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b001110000000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000000000100000000001000000000000000000000000000000), BitBoard(0b001100000000000000000000000000000000000000000000000000000000), BitBoard(0b110000000000000000000000000000000000000000000000000000000000), BitBoard(0b110001000000000000000000000000000000000000000000000000000000), BitBoard(0b010000100001000000000000000000000000000000000000000000000000), BitBoard(0b000000010001100000000000000000000000000000000000000000000000), BitBoard(0b010000100000000001000000000000000000000000000000000000000000), BitBoard(0b000000010000100001000000000000000000000000000000000000000000), BitBoard(0b000000010000000000100001000000000000000000000000000000000000), BitBoard(0b000000010000000000100000100000000000000000000000000000000000), BitBoard(0b000000010000010000010000000000000000000000000000000000000000), BitBoard(0b001000001000000000010000000000000000000000000000000000000000), BitBoard(0b000000010000011000000000000000000000000000000000000000000000), BitBoard(0b001000001000001000000000000000000000000000000000000000000000), BitBoard(0b001100000100000000000000000000000000000000000000000000000000), BitBoard(0b000000011000010000000000000000000000000000000000000000000000), BitBoard(0b000000110000100000000000000000000000000000000000000000000000), BitBoard(0b010000100000100000000000000000000000000000000000000000000000), BitBoard(0b001000001000010000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b011100000000000000000000000000000000000000000000000000000000), BitBoard(0b000000100000000001000000000010000000000000000000000000000000), BitBoard(0b011000000000000000000000000000000000000000000000000000000000), BitBoard(0b100001000000000010000000000000000000000000000000000000000000), BitBoard(0b000000100001000010000000000000000000000000000000000000000000), BitBoard(0b000000100000000001000010000000000000000000000000000000000000), BitBoard(0b000000100000000001000001000000000000000000000000000000000000), BitBoard(0b000000100000100000100000000000000000000000000000000000000000), BitBoard(0b010000010000000000100000000000000000000000000000000000000000), BitBoard(0b000000100000110000000000000000000000000000000000000000000000), BitBoard(0b010000010000010000000000000000000000000000000000000000000000), BitBoard(0b011000001000000000000000000000000000000000000000000000000000), BitBoard(0b000000110000100000000000000000000000000000000000000000000000), BitBoard(0b000001100001000000000000000000000000000000000000000000000000), BitBoard(0b100001000001000000000000000000000000000000000000000000000000), BitBoard(0b010000010000100000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b111000000000000000000000000000000000000000000000000000000000), BitBoard(0b000001000000000010000000000100000000000000000000000000000000), BitBoard(0b110000000000000000000000000000000000000000000000000000000000), BitBoard(0b000001000000000010000010000000000000000000000000000000000000), BitBoard(0b000001000001000001000000000000000000000000000000000000000000), BitBoard(0b100000100000000001000000000000000000000000000000000000000000), BitBoard(0b000001000001100000000000000000000000000000000000000000000000), BitBoard(0b100000100000100000000000000000000000000000000000000000000000), BitBoard(0b110000010000000000000000000000000000000000000000000000000000), BitBoard(0b000001100001000000000000000000000000000000000000000000000000), BitBoard(0b100000100001000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
];

pub const TWO_PATHS: [[[usize; 3]; 15]; 36] = [
    [[0, 6, 12], [0, 6, 7], [0, 1, 7], [0, 1, 2], [0, 1, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[1, 0, 6], [1, 7, 6], [1, 7, 13], [1, 7, 8], [1, 2, 8], [1, 2, 3], [1, 2, 36], [1, 0, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[2, 1, 0], [2, 1, 7], [2, 8, 7], [2, 8, 14], [2, 8, 9], [2, 3, 9], [2, 3, 4], [2, 3, 36], [2, 1, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[3, 2, 1], [3, 2, 8], [3, 9, 8], [3, 9, 15], [3, 9, 10], [3, 4, 10], [3, 4, 5], [3, 4, 36], [3, 2, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[4, 3, 2], [4, 3, 9], [4, 10, 9], [4, 10, 16], [4, 10, 11], [4, 5, 11], [4, 5, 36], [4, 3, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[5, 4, 3], [5, 4, 10], [5, 11, 10], [5, 11, 17], [5, 4, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[6, 12, 18], [6, 12, 13], [6, 7, 13], [6, 7, 8], [6, 7, 1], [6, 0, 1], [6, 0, 36], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[7, 6, 12], [7, 13, 12], [7, 13, 19], [7, 13, 14], [7, 8, 14], [7, 8, 9], [7, 8, 2], [7, 1, 2], [7, 1, 36], [7, 1, 0], [7, 6, 0], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[8, 7, 6], [8, 7, 13], [8, 14, 13], [8, 14, 20], [8, 14, 15], [8, 9, 15], [8, 9, 10], [8, 9, 3], [8, 2, 3], [8, 2, 36], [8, 2, 1], [8, 7, 1], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[9, 8, 7], [9, 8, 14], [9, 15, 14], [9, 15, 21], [9, 15, 16], [9, 10, 16], [9, 10, 11], [9, 10, 4], [9, 3, 4], [9, 3, 36], [9, 3, 2], [9, 8, 2], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[10, 9, 8], [10, 9, 15], [10, 16, 15], [10, 16, 22], [10, 16, 17], [10, 11, 17], [10, 11, 5], [10, 4, 5], [10, 4, 36], [10, 4, 3], [10, 9, 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[11, 10, 9], [11, 10, 16], [11, 17, 16], [11, 17, 23], [11, 5, 36], [11, 5, 4], [11, 10, 4], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[12, 18, 24], [12, 18, 19], [12, 13, 19], [12, 13, 14], [12, 13, 7], [12, 6, 7], [12, 6, 0], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[13, 12, 18], [13, 19, 18], [13, 19, 25], [13, 19, 20], [13, 14, 20], [13, 14, 15], [13, 14, 8], [13, 7, 8], [13, 7, 1], [13, 7, 6], [13, 12, 6], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[14, 13, 12], [14, 13, 19], [14, 20, 19], [14, 20, 26], [14, 20, 21], [14, 15, 21], [14, 15, 16], [14, 15, 9], [14, 8, 9], [14, 8, 2], [14, 8, 7], [14, 13, 7], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[15, 14, 13], [15, 14, 20], [15, 21, 20], [15, 21, 27], [15, 21, 22], [15, 16, 22], [15, 16, 17], [15, 16, 10], [15, 9, 10], [15, 9, 3], [15, 9, 8], [15, 14, 8], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[16, 15, 14], [16, 15, 21], [16, 22, 21], [16, 22, 28], [16, 22, 23], [16, 17, 23], [16, 17, 11], [16, 10, 11], [16, 10, 4], [16, 10, 9], [16, 15, 9], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[17, 16, 15], [17, 16, 22], [17, 23, 22], [17, 23, 29], [17, 11, 5], [17, 11, 10], [17, 16, 10], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[18, 24, 30], [18, 24, 25], [18, 19, 25], [18, 19, 20], [18, 19, 13], [18, 12, 13], [18, 12, 6], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[19, 18, 24], [19, 25, 24], [19, 25, 31], [19, 25, 26], [19, 20, 26], [19, 20, 21], [19, 20, 14], [19, 13, 14], [19, 13, 7], [19, 13, 12], [19, 18, 12], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[20, 19, 18], [20, 19, 25], [20, 26, 25], [20, 26, 32], [20, 26, 27], [20, 21, 27], [20, 21, 22], [20, 21, 15], [20, 14, 15], [20, 14, 8], [20, 14, 13], [20, 19, 13], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[21, 20, 19], [21, 20, 26], [21, 27, 26], [21, 27, 33], [21, 27, 28], [21, 22, 28], [21, 22, 23], [21, 22, 16], [21, 15, 16], [21, 15, 9], [21, 15, 14], [21, 20, 14], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[22, 21, 20], [22, 21, 27], [22, 28, 27], [22, 28, 34], [22, 28, 29], [22, 23, 29], [22, 23, 17], [22, 16, 17], [22, 16, 10], [22, 16, 15], [22, 21, 15], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[23, 22, 21], [23, 22, 28], [23, 29, 28], [23, 29, 35], [23, 17, 11], [23, 17, 16], [23, 22, 16], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[24, 30, 37], [24, 30, 31], [24, 25, 31], [24, 25, 26], [24, 25, 19], [24, 18, 19], [24, 18, 12], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[25, 24, 30], [25, 31, 30], [25, 31, 37], [25, 31, 32], [25, 26, 32], [25, 26, 27], [25, 26, 20], [25, 19, 20], [25, 19, 13], [25, 19, 18], [25, 24, 18], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[26, 25, 24], [26, 25, 31], [26, 32, 31], [26, 32, 37], [26, 32, 33], [26, 27, 33], [26, 27, 28], [26, 27, 21], [26, 20, 21], [26, 20, 14], [26, 20, 19], [26, 25, 19], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[27, 26, 25], [27, 26, 32], [27, 33, 32], [27, 33, 37], [27, 33, 34], [27, 28, 34], [27, 28, 29], [27, 28, 22], [27, 21, 22], [27, 21, 15], [27, 21, 20], [27, 26, 20], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[28, 27, 26], [28, 27, 33], [28, 34, 33], [28, 34, 37], [28, 34, 35], [28, 29, 35], [28, 29, 23], [28, 22, 23], [28, 22, 16], [28, 22, 21], [28, 27, 21], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[29, 28, 27], [29, 28, 34], [29, 35, 34], [29, 35, 37], [29, 23, 17], [29, 23, 22], [29, 28, 22], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[30, 31, 37], [30, 31, 32], [30, 31, 25], [30, 24, 25], [30, 24, 18], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[31, 30, 37], [31, 32, 37], [31, 32, 33], [31, 32, 26], [31, 25, 26], [31, 25, 19], [31, 25, 24], [31, 30, 24], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[32, 31, 30], [32, 31, 37], [32, 33, 37], [32, 33, 34], [32, 33, 27], [32, 26, 27], [32, 26, 20], [32, 26, 25], [32, 31, 25], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[33, 32, 31], [33, 32, 37], [33, 34, 37], [33, 34, 35], [33, 34, 28], [33, 27, 28], [33, 27, 21], [33, 27, 26], [33, 32, 26], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[34, 33, 32], [34, 33, 37], [34, 35, 37], [34, 35, 29], [34, 28, 29], [34, 28, 22], [34, 28, 27], [34, 33, 27], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],
    [[35, 34, 33], [35, 34, 37], [35, 29, 23], [35, 29, 28], [35, 34, 28], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3], [NULL; 3]],

];

pub const TWO_PATH_BACKTRACK_CHECKS: [[BitBoard; 15]; 36] = [
    [BitBoard(0b000000000000000000000000000000000000000000010000000000100000), BitBoard(0b000000000000000000000000000000000000000000000000100000100000), BitBoard(0b000000000000000000000000000000000000000000000000000001000001), BitBoard(0b000000000000000000000000000000000000000000000000000000000011), BitBoard(0b000000000000000000000000000000000000000000000000000000000001), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000100001), BitBoard(0b000000000000000000000000000000000000000000000000100001000000), BitBoard(0b000000000000000000000000000000000000000000100000000001000000), BitBoard(0b000000000000000000000000000000000000000000000001000001000000), BitBoard(0b000000000000000000000000000000000000000000000000000010000010), BitBoard(0b000000000000000000000000000000000000000000000000000000000110), BitBoard(0b000000000000000000000000000000000000000000000000000000000010), BitBoard(0b000000000000000000000000000000000000000000000000000000000001), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000011), BitBoard(0b000000000000000000000000000000000000000000000000000001000010), BitBoard(0b000000000000000000000000000000000000000000000001000010000000), BitBoard(0b000000000000000000000000000000000000000001000000000010000000), BitBoard(0b000000000000000000000000000000000000000000000010000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000100000100), BitBoard(0b000000000000000000000000000000000000000000000000000000001100), BitBoard(0b000000000000000000000000000000000000000000000000000000000100), BitBoard(0b000000000000000000000000000000000000000000000000000000000010), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000110), BitBoard(0b000000000000000000000000000000000000000000000000000010000100), BitBoard(0b000000000000000000000000000000000000000000000010000100000000), BitBoard(0b000000000000000000000000000000000000000010000000000100000000), BitBoard(0b000000000000000000000000000000000000000000000100000100000000), BitBoard(0b000000000000000000000000000000000000000000000000001000001000), BitBoard(0b000000000000000000000000000000000000000000000000000000011000), BitBoard(0b000000000000000000000000000000000000000000000000000000001000), BitBoard(0b000000000000000000000000000000000000000000000000000000000100), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000001100), BitBoard(0b000000000000000000000000000000000000000000000000000100001000), BitBoard(0b000000000000000000000000000000000000000000000100001000000000), BitBoard(0b000000000000000000000000000000000000000100000000001000000000), BitBoard(0b000000000000000000000000000000000000000000001000001000000000), BitBoard(0b000000000000000000000000000000000000000000000000010000010000), BitBoard(0b000000000000000000000000000000000000000000000000000000010000), BitBoard(0b000000000000000000000000000000000000000000000000000000001000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000011000), BitBoard(0b000000000000000000000000000000000000000000000000001000010000), BitBoard(0b000000000000000000000000000000000000000000001000010000000000), BitBoard(0b000000000000000000000000000000000000001000000000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000010000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000001000000000010000000000000000), BitBoard(0b000000000000000000000000000000000000010000010000000000000000), BitBoard(0b000000000000000000000000000000000000000000100000100000000000), BitBoard(0b000000000000000000000000000000000000000000000001100000000000), BitBoard(0b000000000000000000000000000000000000000000000000100001000000), BitBoard(0b000000000000000000000000000000000000000000000000000000100001), BitBoard(0b000000000000000000000000000000000000000000000000000000100000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000010000100000000000), BitBoard(0b000000000000000000000000000000000000010000100000000000000000), BitBoard(0b000000000000000000000000000000010000000000100000000000000000), BitBoard(0b000000000000000000000000000000000000100000100000000000000000), BitBoard(0b000000000000000000000000000000000000000001000001000000000000), BitBoard(0b000000000000000000000000000000000000000000000011000000000000), BitBoard(0b000000000000000000000000000000000000000000000001000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000001000010), BitBoard(0b000000000000000000000000000000000000000000000000000001000000), BitBoard(0b000000000000000000000000000000000000000000000000000001000001), BitBoard(0b000000000000000000000000000000000000000000000000100000100000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000001100000000000), BitBoard(0b000000000000000000000000000000000000000000100001000000000000), BitBoard(0b000000000000000000000000000000000000100001000000000000000000), BitBoard(0b000000000000000000000000000000100000000001000000000000000000), BitBoard(0b000000000000000000000000000000000001000001000000000000000000), BitBoard(0b000000000000000000000000000000000000000010000010000000000000), BitBoard(0b000000000000000000000000000000000000000000000110000000000000), BitBoard(0b000000000000000000000000000000000000000000000010000100000000), BitBoard(0b000000000000000000000000000000000000000000000000000010000100), BitBoard(0b000000000000000000000000000000000000000000000000000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000010000010), BitBoard(0b000000000000000000000000000000000000000000000001000001000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000011000000000000), BitBoard(0b000000000000000000000000000000000000000001000010000000000000), BitBoard(0b000000000000000000000000000000000001000010000000000000000000), BitBoard(0b000000000000000000000000000001000000000010000000000000000000), BitBoard(0b000000000000000000000000000000000010000010000000000000000000), BitBoard(0b000000000000000000000000000000000000000100000100000000000000), BitBoard(0b000000000000000000000000000000000000000000001100000000000000), BitBoard(0b000000000000000000000000000000000000000000000100001000000000), BitBoard(0b000000000000000000000000000000000000000000000000000100001000), BitBoard(0b000000000000000000000000000000000000000000000000000100000000), BitBoard(0b000000000000000000000000000000000000000000000000000100000100), BitBoard(0b000000000000000000000000000000000000000000000010000010000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000110000000000000), BitBoard(0b000000000000000000000000000000000000000010000100000000000000), BitBoard(0b000000000000000000000000000000000010000100000000000000000000), BitBoard(0b000000000000000000000000000010000000000100000000000000000000), BitBoard(0b000000000000000000000000000000000100000100000000000000000000), BitBoard(0b000000000000000000000000000000000000001000001000000000000000), BitBoard(0b000000000000000000000000000000000000000000001000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000001000010000), BitBoard(0b000000000000000000000000000000000000000000000000001000000000), BitBoard(0b000000000000000000000000000000000000000000000000001000001000), BitBoard(0b000000000000000000000000000000000000000000000100000100000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000001100000000000000), BitBoard(0b000000000000000000000000000000000000000100001000000000000000), BitBoard(0b000000000000000000000000000000000100001000000000000000000000), BitBoard(0b000000000000000000000000000100000000001000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000010000010000), BitBoard(0b000000000000000000000000000000000000000000001000001000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000100000000001000000000000000000000000000), BitBoard(0b000000000000000000000000001000001000000000000000000000000000), BitBoard(0b000000000000000000000000000000010000010000000000000000000000), BitBoard(0b000000000000000000000000000000000000110000000000000000000000), BitBoard(0b000000000000000000000000000000000000010000100000000000000000), BitBoard(0b000000000000000000000000000000000000000000010000100000000000), BitBoard(0b000000000000000000000000000000000000000000010000000000100000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000001000010000000000000000000000), BitBoard(0b000000000000000000000000001000010000000000000000000000000000), BitBoard(0b000000000000000000001000000000010000000000000000000000000000), BitBoard(0b000000000000000000000000010000010000000000000000000000000000), BitBoard(0b000000000000000000000000000000100000100000000000000000000000), BitBoard(0b000000000000000000000000000000000001100000000000000000000000), BitBoard(0b000000000000000000000000000000000000100001000000000000000000), BitBoard(0b000000000000000000000000000000000000000000100001000000000000), BitBoard(0b000000000000000000000000000000000000000000100000000001000000), BitBoard(0b000000000000000000000000000000000000000000100000100000000000), BitBoard(0b000000000000000000000000000000000000010000010000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000110000000000000000000000), BitBoard(0b000000000000000000000000000000010000100000000000000000000000), BitBoard(0b000000000000000000000000010000100000000000000000000000000000), BitBoard(0b000000000000000000010000000000100000000000000000000000000000), BitBoard(0b000000000000000000000000100000100000000000000000000000000000), BitBoard(0b000000000000000000000000000001000001000000000000000000000000), BitBoard(0b000000000000000000000000000000000011000000000000000000000000), BitBoard(0b000000000000000000000000000000000001000010000000000000000000), BitBoard(0b000000000000000000000000000000000000000001000010000000000000), BitBoard(0b000000000000000000000000000000000000000001000000000010000000), BitBoard(0b000000000000000000000000000000000000000001000001000000000000), BitBoard(0b000000000000000000000000000000000000100000100000000000000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000001100000000000000000000000), BitBoard(0b000000000000000000000000000000100001000000000000000000000000), BitBoard(0b000000000000000000000000100001000000000000000000000000000000), BitBoard(0b000000000000000000100000000001000000000000000000000000000000), BitBoard(0b000000000000000000000001000001000000000000000000000000000000), BitBoard(0b000000000000000000000000000010000010000000000000000000000000), BitBoard(0b000000000000000000000000000000000110000000000000000000000000), BitBoard(0b000000000000000000000000000000000010000100000000000000000000), BitBoard(0b000000000000000000000000000000000000000010000100000000000000), BitBoard(0b000000000000000000000000000000000000000010000000000100000000), BitBoard(0b000000000000000000000000000000000000000010000010000000000000), BitBoard(0b000000000000000000000000000000000001000001000000000000000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000011000000000000000000000000), BitBoard(0b000000000000000000000000000001000010000000000000000000000000), BitBoard(0b000000000000000000000001000010000000000000000000000000000000), BitBoard(0b000000000000000001000000000010000000000000000000000000000000), BitBoard(0b000000000000000000000010000010000000000000000000000000000000), BitBoard(0b000000000000000000000000000100000100000000000000000000000000), BitBoard(0b000000000000000000000000000000000100001000000000000000000000), BitBoard(0b000000000000000000000000000000000000000100001000000000000000), BitBoard(0b000000000000000000000000000000000000000100000000001000000000), BitBoard(0b000000000000000000000000000000000000000100000100000000000000), BitBoard(0b000000000000000000000000000000000010000010000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000110000000000000000000000000), BitBoard(0b000000000000000000000000000010000100000000000000000000000000), BitBoard(0b000000000000000000000010000100000000000000000000000000000000), BitBoard(0b000000000000000010000000000100000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000001000000000010000000000), BitBoard(0b000000000000000000000000000000000000001000001000000000000000), BitBoard(0b000000000000000000000000000000000100000100000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000010000000000100000000000000000000000000000000000000), BitBoard(0b000000000000000100000100000000000000000000000000000000000000), BitBoard(0b000000000000000000001000001000000000000000000000000000000000), BitBoard(0b000000000000000000000000011000000000000000000000000000000000), BitBoard(0b000000000000000000000000001000010000000000000000000000000000), BitBoard(0b000000000000000000000000000000001000010000000000000000000000), BitBoard(0b000000000000000000000000000000001000000000010000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000100001000000000000000000000000000000000), BitBoard(0b000000000000000100001000000000000000000000000000000000000000), BitBoard(0b000000000100000000001000000000000000000000000000000000000000), BitBoard(0b000000000000001000001000000000000000000000000000000000000000), BitBoard(0b000000000000000000010000010000000000000000000000000000000000), BitBoard(0b000000000000000000000000110000000000000000000000000000000000), BitBoard(0b000000000000000000000000010000100000000000000000000000000000), BitBoard(0b000000000000000000000000000000010000100000000000000000000000), BitBoard(0b000000000000000000000000000000010000000000100000000000000000), BitBoard(0b000000000000000000000000000000010000010000000000000000000000), BitBoard(0b000000000000000000000000001000001000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000011000000000000000000000000000000000), BitBoard(0b000000000000000000001000010000000000000000000000000000000000), BitBoard(0b000000000000001000010000000000000000000000000000000000000000), BitBoard(0b000000001000000000010000000000000000000000000000000000000000), BitBoard(0b000000000000010000010000000000000000000000000000000000000000), BitBoard(0b000000000000000000100000100000000000000000000000000000000000), BitBoard(0b000000000000000000000001100000000000000000000000000000000000), BitBoard(0b000000000000000000000000100001000000000000000000000000000000), BitBoard(0b000000000000000000000000000000100001000000000000000000000000), BitBoard(0b000000000000000000000000000000100000000001000000000000000000), BitBoard(0b000000000000000000000000000000100000100000000000000000000000), BitBoard(0b000000000000000000000000010000010000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000110000000000000000000000000000000000), BitBoard(0b000000000000000000010000100000000000000000000000000000000000), BitBoard(0b000000000000010000100000000000000000000000000000000000000000), BitBoard(0b000000010000000000100000000000000000000000000000000000000000), BitBoard(0b000000000000100000100000000000000000000000000000000000000000), BitBoard(0b000000000000000001000001000000000000000000000000000000000000), BitBoard(0b000000000000000000000011000000000000000000000000000000000000), BitBoard(0b000000000000000000000001000010000000000000000000000000000000), BitBoard(0b000000000000000000000000000001000010000000000000000000000000), BitBoard(0b000000000000000000000000000001000000000010000000000000000000), BitBoard(0b000000000000000000000000000001000001000000000000000000000000), BitBoard(0b000000000000000000000000100000100000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000001100000000000000000000000000000000000), BitBoard(0b000000000000000000100001000000000000000000000000000000000000), BitBoard(0b000000000000100001000000000000000000000000000000000000000000), BitBoard(0b000000100000000001000000000000000000000000000000000000000000), BitBoard(0b000000000001000001000000000000000000000000000000000000000000), BitBoard(0b000000000000000010000010000000000000000000000000000000000000), BitBoard(0b000000000000000000000010000100000000000000000000000000000000), BitBoard(0b000000000000000000000000000010000100000000000000000000000000), BitBoard(0b000000000000000000000000000010000000000100000000000000000000), BitBoard(0b000000000000000000000000000010000010000000000000000000000000), BitBoard(0b000000000000000000000001000001000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000011000000000000000000000000000000000000), BitBoard(0b000000000000000001000010000000000000000000000000000000000000), BitBoard(0b000000000001000010000000000000000000000000000000000000000000), BitBoard(0b000001000000000010000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000100000000001000000000000000000000), BitBoard(0b000000000000000000000000000100000100000000000000000000000000), BitBoard(0b000000000000000000000010000010000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000010000000000000000000000000000000000000000000000000), BitBoard(0b000010000010000000000000000000000000000000000000000000000000), BitBoard(0b000000000100000100000000000000000000000000000000000000000000), BitBoard(0b000000000000001100000000000000000000000000000000000000000000), BitBoard(0b000000000000000100001000000000000000000000000000000000000000), BitBoard(0b000000000000000000000100001000000000000000000000000000000000), BitBoard(0b000000000000000000000100000000001000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000010000100000000000000000000000000000000000000000000), BitBoard(0b000010000100000000000000000000000000000000000000000000000000), BitBoard(0b000000000100000000000000000000000000000000000000000000000000), BitBoard(0b000100000100000000000000000000000000000000000000000000000000), BitBoard(0b000000001000001000000000000000000000000000000000000000000000), BitBoard(0b000000000000011000000000000000000000000000000000000000000000), BitBoard(0b000000000000001000010000000000000000000000000000000000000000), BitBoard(0b000000000000000000001000010000000000000000000000000000000000), BitBoard(0b000000000000000000001000000000010000000000000000000000000000), BitBoard(0b000000000000000000001000001000000000000000000000000000000000), BitBoard(0b000000000000000100000100000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000001100000000000000000000000000000000000000000000), BitBoard(0b000000000100001000000000000000000000000000000000000000000000), BitBoard(0b000100001000000000000000000000000000000000000000000000000000), BitBoard(0b000000001000000000000000000000000000000000000000000000000000), BitBoard(0b001000001000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000010000000000000000000000000000000000000000000000), BitBoard(0b000000000000110000000000000000000000000000000000000000000000), BitBoard(0b000000000000010000100000000000000000000000000000000000000000), BitBoard(0b000000000000000000010000100000000000000000000000000000000000), BitBoard(0b000000000000000000010000000000100000000000000000000000000000), BitBoard(0b000000000000000000010000010000000000000000000000000000000000), BitBoard(0b000000000000001000001000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000011000000000000000000000000000000000000000000000), BitBoard(0b000000001000010000000000000000000000000000000000000000000000), BitBoard(0b001000010000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000000000000000000000000000000000000000000000000000), BitBoard(0b010000010000000000000000000000000000000000000000000000000000), BitBoard(0b000000100000100000000000000000000000000000000000000000000000), BitBoard(0b000000000001100000000000000000000000000000000000000000000000), BitBoard(0b000000000000100001000000000000000000000000000000000000000000), BitBoard(0b000000000000000000100001000000000000000000000000000000000000), BitBoard(0b000000000000000000100000000001000000000000000000000000000000), BitBoard(0b000000000000000000100000100000000000000000000000000000000000), BitBoard(0b000000000000010000010000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000000110000000000000000000000000000000000000000000000), BitBoard(0b000000010000100000000000000000000000000000000000000000000000), BitBoard(0b010000100000000000000000000000000000000000000000000000000000), BitBoard(0b000000100000000000000000000000000000000000000000000000000000), BitBoard(0b100000100000000000000000000000000000000000000000000000000000), BitBoard(0b000001000001000000000000000000000000000000000000000000000000), BitBoard(0b000000000001000010000000000000000000000000000000000000000000), BitBoard(0b000000000000000001000010000000000000000000000000000000000000), BitBoard(0b000000000000000001000000000010000000000000000000000000000000), BitBoard(0b000000000000000001000001000000000000000000000000000000000000), BitBoard(0b000000000000100000100000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000000000001100000000000000000000000000000000000000000000000), BitBoard(0b000000100001000000000000000000000000000000000000000000000000), BitBoard(0b100001000000000000000000000000000000000000000000000000000000), BitBoard(0b000001000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000010000000000100000000000000000000000000000000), BitBoard(0b000000000000000010000010000000000000000000000000000000000000), BitBoard(0b000000000001000001000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000010000000000000000000000000000000000000000000000000000000), BitBoard(0b000110000000000000000000000000000000000000000000000000000000), BitBoard(0b000010000100000000000000000000000000000000000000000000000000), BitBoard(0b000000000010000100000000000000000000000000000000000000000000), BitBoard(0b000000000010000000000100000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000010000000000000000000000000000000000000000000000000000000), BitBoard(0b000100000000000000000000000000000000000000000000000000000000), BitBoard(0b001100000000000000000000000000000000000000000000000000000000), BitBoard(0b000100001000000000000000000000000000000000000000000000000000), BitBoard(0b000000000100001000000000000000000000000000000000000000000000), BitBoard(0b000000000100000000001000000000000000000000000000000000000000), BitBoard(0b000000000100000100000000000000000000000000000000000000000000), BitBoard(0b000010000010000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b000110000000000000000000000000000000000000000000000000000000), BitBoard(0b000100000000000000000000000000000000000000000000000000000000), BitBoard(0b001000000000000000000000000000000000000000000000000000000000), BitBoard(0b011000000000000000000000000000000000000000000000000000000000), BitBoard(0b001000010000000000000000000000000000000000000000000000000000), BitBoard(0b000000001000010000000000000000000000000000000000000000000000), BitBoard(0b000000001000000000010000000000000000000000000000000000000000), BitBoard(0b000000001000001000000000000000000000000000000000000000000000), BitBoard(0b000100000100000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b001100000000000000000000000000000000000000000000000000000000), BitBoard(0b001000000000000000000000000000000000000000000000000000000000), BitBoard(0b010000000000000000000000000000000000000000000000000000000000), BitBoard(0b110000000000000000000000000000000000000000000000000000000000), BitBoard(0b010000100000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000100000000000000000000000000000000000000000000000), BitBoard(0b000000010000000000100000000000000000000000000000000000000000), BitBoard(0b000000010000010000000000000000000000000000000000000000000000), BitBoard(0b001000001000000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b011000000000000000000000000000000000000000000000000000000000), BitBoard(0b010000000000000000000000000000000000000000000000000000000000), BitBoard(0b100000000000000000000000000000000000000000000000000000000000), BitBoard(0b100001000000000000000000000000000000000000000000000000000000), BitBoard(0b000000100001000000000000000000000000000000000000000000000000), BitBoard(0b000000100000000001000000000000000000000000000000000000000000), BitBoard(0b000000100000100000000000000000000000000000000000000000000000), BitBoard(0b010000010000000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
    [BitBoard(0b110000000000000000000000000000000000000000000000000000000000), BitBoard(0b100000000000000000000000000000000000000000000000000000000000), BitBoard(0b000001000000000010000000000000000000000000000000000000000000), BitBoard(0b000001000001000000000000000000000000000000000000000000000000), BitBoard(0b100000100000000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB, NULL_BB],
];

pub const ONE_PATHS: [[[usize; 2]; 4]; 36] = [
    [[0, 6], [0, 1], [0, 36], [NULL; 2]],
    [[1, 0], [1, 7], [1, 2], [1, 36]],
    [[2, 1], [2, 8], [2, 3], [2, 36]],
    [[3, 2], [3, 9], [3, 4], [3, 36]],
    [[4, 3], [4, 10], [4, 5], [4, 36]],
    [[5, 4], [5, 11], [5, 36], [NULL; 2]],
    [[6, 12], [6, 7], [6, 0], [NULL; 2]],
    [[7, 6], [7, 13], [7, 8], [7, 1]],
    [[8, 7], [8, 14], [8, 9], [8, 2]],
    [[9, 8], [9, 15], [9, 10], [9, 3]],
    [[10, 9], [10, 16], [10, 11], [10, 4]],
    [[11, 10], [11, 17], [11, 5], [NULL; 2]],
    [[12, 18], [12, 13], [12, 6], [NULL; 2]],
    [[13, 12], [13, 19], [13, 14], [13, 7]],
    [[14, 13], [14, 20], [14, 15], [14, 8]],
    [[15, 14], [15, 21], [15, 16], [15, 9]],
    [[16, 15], [16, 22], [16, 17], [16, 10]],
    [[17, 16], [17, 23], [17, 11], [NULL; 2]],
    [[18, 24], [18, 19], [18, 12], [NULL; 2]],
    [[19, 18], [19, 25], [19, 20], [19, 13]],
    [[20, 19], [20, 26], [20, 21], [20, 14]],
    [[21, 20], [21, 27], [21, 22], [21, 15]],
    [[22, 21], [22, 28], [22, 23], [22, 16]],
    [[23, 22], [23, 29], [23, 17], [NULL; 2]],
    [[24, 30], [24, 25], [24, 18], [NULL; 2]],
    [[25, 24], [25, 31], [25, 26], [25, 19]],
    [[26, 25], [26, 32], [26, 27], [26, 20]],
    [[27, 26], [27, 33], [27, 28], [27, 21]],
    [[28, 27], [28, 34], [28, 29], [28, 22]],
    [[29, 28], [29, 35], [29, 23], [NULL; 2]],
    [[30, 37], [30, 31], [30, 24], [NULL; 2]],
    [[31, 30], [31, 37], [31, 32], [31, 25]],
    [[32, 31], [32, 37], [32, 33], [32, 26]],
    [[33, 32], [33, 37], [33, 34], [33, 27]],
    [[34, 33], [34, 37], [34, 35], [34, 28]],
    [[35, 34], [35, 37], [35, 29], [NULL; 2]],

];

pub const ONE_PATH_BACKTRACK_CHECKS: [[BitBoard; 5]; 36]  = [
    [BitBoard(0b000000000000000000000000000000000000000000000000000000100000), BitBoard(0b000000000000000000000000000000000000000000000000000000000001), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000001), BitBoard(0b000000000000000000000000000000000000000000000000000001000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000010), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000010), BitBoard(0b000000000000000000000000000000000000000000000000000010000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000100), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000100), BitBoard(0b000000000000000000000000000000000000000000000000000100000000), BitBoard(0b000000000000000000000000000000000000000000000000000000001000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000001000), BitBoard(0b000000000000000000000000000000000000000000000000001000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000010000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000010000), BitBoard(0b000000000000000000000000000000000000000000000000010000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000010000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000100000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000100000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000100000000000), BitBoard(0b000000000000000000000000000000000000000000100000000000000000), BitBoard(0b000000000000000000000000000000000000000000000001000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000001000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000001000000000000), BitBoard(0b000000000000000000000000000000000000000001000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000010000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000010000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000010000000000000), BitBoard(0b000000000000000000000000000000000000000010000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000100000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000100000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000100000000000000), BitBoard(0b000000000000000000000000000000000000000100000000000000000000), BitBoard(0b000000000000000000000000000000000000000000001000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000001000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000001000000000000000), BitBoard(0b000000000000000000000000000000000000001000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000010000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000001000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000010000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000010000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000010000000000000000000000), BitBoard(0b000000000000000000000000000000010000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000100000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000100000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000100000000000000000000000), BitBoard(0b000000000000000000000000000000100000000000000000000000000000), BitBoard(0b000000000000000000000000000000000001000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000001000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000001000000000000000000000000), BitBoard(0b000000000000000000000000000001000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000010000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000010000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000010000000000000000000000000), BitBoard(0b000000000000000000000000000010000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000100000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000100000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000000000000100000000000000000000000000), BitBoard(0b000000000000000000000000000100000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000001000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000100000000000000000000000000000000000000), BitBoard(0b000000000000000000000000001000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000001000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000001000000000000000000000000000000000), BitBoard(0b000000000000000000001000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000010000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000010000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000010000000000000000000000000000000000), BitBoard(0b000000000000000000010000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000100000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000100000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000000100000000000000000000000000000000000), BitBoard(0b000000000000000000100000000000000000000000000000000000000000), BitBoard(0b000000000000000000000001000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000001000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000001000000000000000000000000000000000000), BitBoard(0b000000000000000001000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000010000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000010000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000000000000010000000000000000000000000000000000000), BitBoard(0b000000000000000010000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000100000000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000010000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000100000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000100000000000000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000100000000000000000000000000000000000000000000), BitBoard(0b000000000100000000000000000000000000000000000000000000000000), BitBoard(0b000000000000001000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000001000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000001000000000000000000000000000000000000000000000), BitBoard(0b000000001000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000010000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000010000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000010000000000000000000000000000000000000000000000), BitBoard(0b000000010000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000100000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000100000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000000100000000000000000000000000000000000000000000000), BitBoard(0b000000100000000000000000000000000000000000000000000000000000), BitBoard(0b000000000001000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000001000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000000000001000000000000000000000000000000000000000000000000), BitBoard(0b000001000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000010000000000000000000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000000000000000000000000000000000000000000000000000000000000), BitBoard(0b000010000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000010000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB],
    [BitBoard(0b000010000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), BitBoard(0b000100000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000100000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b000100000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), BitBoard(0b001000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000001000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b001000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), BitBoard(0b010000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000010000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b010000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), BitBoard(0b100000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000100000000000000000000000000000000000000000000000000000), NULL_BB],
    [BitBoard(0b100000000000000000000000000000000000000000000000000000000000), BitBoard(0b000000000000000000000000000000000000000000000000000000000000), BitBoard(0b000001000000000000000000000000000000000000000000000000000000), NULL_BB, NULL_BB],
];

// const FLIPPED_POSITIONS: [usize; 38] = [35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 37, 36];


// pub fn flip_move(mv: Move) -> Move {
//     let mut flipped = mv.clone();

//     let mv_data = mv.data;

//     let mut idx = 1;
//     loop {
//         if mv_data[idx] == NULL {
//             break;

//         }

//         flipped.data[idx] = FLIPPED_POSITIONS[mv_data[idx]];

//         idx += 2;
//         if idx > 5 {
//             break;
//         }

//     }
    
//     return flipped;

// }

#[derive(PartialEq, Debug, Clone, Copy)]
pub enum MoveType {
    Drop,
    Bounce,
    None

}

#[derive(PartialEq, Debug, Clone, Copy)]
pub struct Move {
    pub data: [usize; 6],
    pub flag: MoveType,
    pub score: f64

}

impl Move {
    pub fn new(data: [usize; 6], flag: MoveType, score: f64) -> Move {
        return Move {
            data: data,
            flag: flag,
            score: score

        };

    }

    pub fn new_null() -> Move {
        return Move {
            data: [NULL; 6],
            flag: MoveType::None,
            score: f64::NEG_INFINITY

        };

    }

    pub fn is_null(&self) -> bool {
        if self.data == [NULL; 6] && self.flag == MoveType::None  && self.score == f64::NEG_INFINITY {
            return true;

        } else {
            return false;

        }

    }

}

pub fn sort_moves_highest_score_first(mut moves: Vec<Move>) -> Vec<Move> {
    moves.sort_by(|a, b| {
        if a.score > b.score {
            Ordering::Less
            
        } else if a.score == b.score {
            Ordering::Equal

        } else {
            Ordering::Greater

        }

    });

    return moves;

}

pub fn order_moves(moves: Vec<Move>, board: &mut BoardState, player: f64) -> Vec<Move> {
    let mut moves_to_sort: Vec<(Move, f64)> = Vec::new();
    
    for mv in moves {
        board.make_move(&mv);

        let predicted_score: f64 = valid_move_count(board, -player) as f64;
       
        board.undo_move(&mv);

        moves_to_sort.push((mv, predicted_score));
        
    }

    moves_to_sort.sort_unstable_by(|a, b| {
        if a.1 < b.1 {
            Ordering::Less
            
        } else if a.1 == b.1 {
            Ordering::Equal

        } else {
            Ordering::Greater

        }

    });

    let mut ordered_moves: Vec<Move> = Vec::new();

    for item in &moves_to_sort {
        ordered_moves.push(item.0);
        
    }

    return ordered_moves;
 
}

pub fn valid_moves(board: &mut BoardState, player: f64) -> Vec<Move> {
    let active_lines = board.get_active_lines();

    let banned_positions: [bool; 36] = [false; 36];
    let backtrack_board = BitBoard(0);

    if player == 1.0 {
        let mut player_1_drops: Vec<usize> = board.get_drops(active_lines, 1);
        let mut player_1_moves: Vec<Move> = vec![];

        for x in 0..6 {
            if board.data[active_lines[0] + x] != 0 {
                let starting_piece: usize = active_lines[0] + x;
                let starting_piece_type: usize = board.data[starting_piece];

                player_1_drops.push(starting_piece);

                board.data[starting_piece] = 0;

                let mut piece_moves = get_piece_moves(board, backtrack_board, banned_positions, starting_piece, starting_piece_type, starting_piece, starting_piece_type, 1, &player_1_drops);
                player_1_moves.append(&mut piece_moves);

                board.data[starting_piece] = starting_piece_type;

                player_1_drops.pop();

            }

        }

        return player_1_moves;

    } else {
        let mut player_2_drops: Vec<usize> = board.get_drops(active_lines, 2);
        let mut player_2_moves: Vec<Move> = vec![];

        for x in 0..6 {
            if board.data[active_lines[1] + x] != 0 {
                let starting_piece: usize = active_lines[1] + x;
                let starting_piece_type: usize = board.data[starting_piece];

                player_2_drops.push(starting_piece);

                board.data[starting_piece] = 0;

                let mut piece_moves = get_piece_moves(board, backtrack_board, banned_positions, starting_piece, starting_piece_type, starting_piece, starting_piece_type,2, &player_2_drops);
                player_2_moves.append(&mut piece_moves);

                board.data[starting_piece] = starting_piece_type;

                player_2_drops.pop();

            }

        }

        return player_2_moves;

    }

}

pub fn get_piece_moves(board: &BoardState, mut backtrack_board: BitBoard, mut banned_positions: [bool; 36], current_piece: usize, current_piece_type: usize, starting_piece: usize, starting_piece_type: usize, player: i8, current_player_drops: &Vec<usize>) -> Vec<Move> {
    let mut final_moves: Vec<Move> = vec![];
    
    if current_piece_type == ONE_PIECE {
        for (path_idx, path) in ONE_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }

            let end = path[1];
            let end_piece = board.data[end];

            let backtrack_path = ONE_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, PLAYER_1_GOAL, NULL, NULL], MoveType::Bounce, 0.0));
                continue;

            } else if end == PLAYER_2_GOAL {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, PLAYER_2_GOAL, NULL, NULL], MoveType::Bounce, 0.0));
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;

                    for drop_pos in current_player_drops.iter() {
                        final_moves.push(Move::new([0, starting_piece, starting_piece_type, end, end_piece, *drop_pos], MoveType::Drop, 0.0));

                    }
                    
                    let mut moves = get_piece_moves(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player, current_player_drops);
                    final_moves.append(&mut moves);
                    
                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;

                }
                
            } else {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, end, NULL, NULL], MoveType::Bounce, 0.0));

            }

        }

    } if current_piece_type == TWO_PIECE {
        for (path_idx, path) in TWO_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }

            let end = path[2];
            let end_piece = board.data[end];

            if board.data[path[1]] != 0 {
                continue;

            }

            let backtrack_path = TWO_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, PLAYER_1_GOAL, NULL, NULL], MoveType::Bounce, 0.0));
                continue;

            } else if end == PLAYER_2_GOAL {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, PLAYER_2_GOAL, NULL, NULL], MoveType::Bounce, 0.0));
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;
                    
                    for drop_pos in current_player_drops.iter() {
                        final_moves.push(Move::new([0, starting_piece, starting_piece_type, end, end_piece, *drop_pos], MoveType::Drop, 0.0));

                    }
                    
                    let mut moves = get_piece_moves(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player, current_player_drops);
                    final_moves.append(&mut moves);
                    
                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;
            
                }
                
            } else {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, end, NULL, NULL], MoveType::Bounce, 0.0));

            }

        }

    } else if current_piece_type == THREE_PIECE {
        for (path_idx, path ) in THREE_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }

            let end = path[3];
            let end_piece = board.data[end];

            if board.data[path[1]] != 0 {
                continue;
                
            } else if board.data[path[2]] != 0 {
                continue;
                
            }
            
            let backtrack_path = THREE_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, PLAYER_1_GOAL, NULL, NULL], MoveType::Bounce, 0.0));
                continue;

            } else if end == PLAYER_2_GOAL {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, PLAYER_2_GOAL, NULL, NULL], MoveType::Bounce, 0.0));
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;

                    for drop_pos in current_player_drops.iter() {
                        final_moves.push(Move::new([0, starting_piece, starting_piece_type, end, end_piece, *drop_pos], MoveType::Drop, 0.0));

                    }
                    
                    let mut moves = get_piece_moves(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player, current_player_drops);
                    final_moves.append(&mut moves);

                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;
            
                }
                
            } else {
                final_moves.push(Move::new([0, starting_piece, starting_piece_type, end, NULL, NULL], MoveType::Bounce, 0.0));

            }

        }

    }

    return final_moves;

}

pub fn valid_move_count(board: &mut BoardState, player: f64) -> usize {
    let active_lines = board.get_active_lines();

    let banned_positions: [bool; 36] = [false; 36];
    let backtrack_board = BitBoard(0);

    if player == 1.0 {
        let player_1_drop_count: usize = board.get_drops(active_lines, 1).len() + 1;
        let mut player_1_move_count: usize = 0;

        for x in 0..6 {
            if board.data[active_lines[0] + x] != 0 {
                let starting_piece: usize = active_lines[0] + x;
                let starting_piece_type: usize = board.data[starting_piece];

                board.data[starting_piece] = 0;

                let piece_move_count = get_piece_move_count(board, backtrack_board, banned_positions, starting_piece, starting_piece_type, starting_piece, starting_piece_type, 1, player_1_drop_count);
                player_1_move_count += piece_move_count;

                board.data[starting_piece] = starting_piece_type;

            }

        }

        return player_1_move_count;

    } else {
        let player_2_drop_count: usize = board.get_drops(active_lines, 2).len() + 1;
        let mut player_2_move_count: usize = 0;

        for x in 0..6 {
            if board.data[active_lines[1] + x] != 0 {
                let starting_piece: usize = active_lines[1] + x;
                let starting_piece_type: usize = board.data[starting_piece];

                board.data[starting_piece] = 0;

                let piece_move_count: usize = get_piece_move_count(board, backtrack_board, banned_positions, starting_piece, starting_piece_type, starting_piece, starting_piece_type,2, player_2_drop_count);
                player_2_move_count += piece_move_count;

                board.data[starting_piece] = starting_piece_type;

            }

        }

        return player_2_move_count;

    }

}

pub fn get_piece_move_count(board: &BoardState, mut backtrack_board: BitBoard, mut banned_positions: [bool; 36], current_piece: usize, current_piece_type: usize, starting_piece: usize, starting_piece_type: usize, player: i8, current_player_drop_count: usize) -> usize {
    let mut final_moves: usize = 0;
    
    if current_piece_type == ONE_PIECE {
        for (path_idx, path) in ONE_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }

            let end = path[1];
            let end_piece = board.data[end];

            let backtrack_path = ONE_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_moves += 1;
                continue;

            } else if end == PLAYER_2_GOAL {
                final_moves += 1;
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;

                    final_moves += current_player_drop_count;
                    
                    let move_count: usize = get_piece_move_count(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player, current_player_drop_count);
                    final_moves += move_count;
                    
                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;

                }
                
            } else {
                final_moves += 1;

            }

        }

    } if current_piece_type == TWO_PIECE {
        for (path_idx, path) in TWO_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }
            
            let end = path[2];
            let end_piece = board.data[end];

            if board.data[path[1]] != 0 {
                continue;

            }

            let backtrack_path = TWO_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_moves += 1;
                continue;

            } else if end == PLAYER_2_GOAL {
                final_moves += 1;
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;
                    
                    final_moves += current_player_drop_count;
                    
                    let move_count: usize = get_piece_move_count(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player, current_player_drop_count);
                    final_moves += move_count;
                    
                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;
            
                }
                
            } else {
                final_moves += 1;

            }

        }

    } else if current_piece_type == THREE_PIECE {
        for (path_idx, path ) in THREE_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }

            let end = path[3];
            let end_piece = board.data[end];

            if board.data[path[1]] != 0 {
                continue;
                
            } else if board.data[path[2]] != 0 {
                continue;
                
            }
            
            let backtrack_path = THREE_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_moves += 1;
                continue;

            } else if end == PLAYER_2_GOAL {
                final_moves += 1;
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;

                    final_moves += current_player_drop_count;
                    
                    let move_count: usize = get_piece_move_count(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player, current_player_drop_count);
                    final_moves += move_count;

                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;
            
                }
                
            } else {
                final_moves += 1;

            }

        }

    }

    return final_moves;

}

pub fn valid_threat_count(board: &mut BoardState, player: f64) -> usize {
    let active_lines = board.get_active_lines();

    let banned_positions: [bool; 36] = [false; 36];
    let backtrack_board = BitBoard(0);

    if player == 1.0 {
        let mut player_1_threat_count: usize = 0;

        for x in 0..6 {
            if board.data[active_lines[0] + x] != 0 {
                let starting_piece: usize = active_lines[0] + x;
                let starting_piece_type: usize = board.data[starting_piece];

                board.data[starting_piece] = 0;

                let piece_move_count = get_piece_threat_count(board, backtrack_board, banned_positions, starting_piece, starting_piece_type, starting_piece, starting_piece_type, 1);
                player_1_threat_count += piece_move_count;

                board.data[starting_piece] = starting_piece_type;

            }

        }

        return player_1_threat_count;

    } else {
        let mut player_2_threat_count: usize = 0;

        for x in 0..6 {
            if board.data[active_lines[1] + x] != 0 {
                let starting_piece: usize = active_lines[1] + x;
                let starting_piece_type: usize = board.data[starting_piece];

                board.data[starting_piece] = 0;

                let piece_move_count: usize = get_piece_threat_count(board, backtrack_board, banned_positions, starting_piece, starting_piece_type, starting_piece, starting_piece_type,2);
                player_2_threat_count += piece_move_count;

                board.data[starting_piece] = starting_piece_type;

            }

        }

        return player_2_threat_count;

    }

}

pub fn get_piece_threat_count(board: &BoardState, mut backtrack_board: BitBoard, mut banned_positions: [bool; 36], current_piece: usize, current_piece_type: usize, starting_piece: usize, starting_piece_type: usize, player: i8) -> usize {
    let mut final_threat_count: usize = 0;
    
    if current_piece_type == ONE_PIECE {
        for (path_idx, path) in ONE_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }

            let end = path[1];
            let end_piece = board.data[end];

            let backtrack_path = ONE_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_threat_count += 1;
                continue;

            } else if end == PLAYER_2_GOAL {
                final_threat_count += 1;
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;
                    
                    let threat_count: usize = get_piece_threat_count(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player);
                    final_threat_count += threat_count;
                    
                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;

                }
                
            }

        }

    } if current_piece_type == TWO_PIECE {
        for (path_idx, path) in TWO_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }
            
            let end = path[2];
            let end_piece = board.data[end];

            if board.data[path[1]] != 0 {
                continue;

            }

            let backtrack_path = TWO_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_threat_count += 1;
                continue;

            } else if end == PLAYER_2_GOAL {
                final_threat_count += 1;
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;
                    
                    let threat_count: usize = get_piece_threat_count(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player);
                    final_threat_count += threat_count;
                    
                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;
            
                }
                
            }

        }

    } else if current_piece_type == THREE_PIECE {
        for (path_idx, path ) in THREE_PATHS[current_piece].iter().enumerate() {
            if path[0] == NULL {
                break;

            }
            
            let end = path[3];
            let end_piece = board.data[end];

            if board.data[path[1]] != 0 {
                continue;
                
            } else if board.data[path[2]] != 0 {
                continue;
                
            }
            
            let backtrack_path = THREE_PATH_BACKTRACK_CHECKS[current_piece][path_idx];
            if (backtrack_board & backtrack_path).is_not_empty() {
                continue;

            }

            if end == PLAYER_2_GOAL && player == 2 || end == PLAYER_1_GOAL && player == 1 {
                continue;

            } 

            if end == PLAYER_1_GOAL {
                final_threat_count += 1;
                continue;

            } else if end == PLAYER_2_GOAL {
                final_threat_count += 1;
                continue;

            }

            if board.data[end] != 0 {
                if !banned_positions[end] {
                    banned_positions[end] = true;

                    backtrack_board ^= backtrack_path;

                    let threat_count: usize = get_piece_threat_count(board, backtrack_board, banned_positions, end, end_piece, starting_piece, starting_piece_type, player);
                    final_threat_count += threat_count;

                    banned_positions[end] = false;

                    backtrack_board ^= backtrack_path;
            
                }
                
            }

        }

    }

    return final_threat_count;

}
